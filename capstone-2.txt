sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2 
% cd eks-cluster 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init

Initializing the backend...
Initializing modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.8.4 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 5.0.0, >= 5.40.0"...
- Finding hashicorp/time versions matching ">= 0.9.0"...
- Finding hashicorp/tls versions matching ">= 3.0.0"...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0"...
- Finding hashicorp/null versions matching ">= 3.0.0"...
- Installing hashicorp/aws v6.3.0...
- Installed hashicorp/aws v6.3.0 (signed by HashiCorp)
- Installing hashicorp/time v0.13.1...
- Installed hashicorp/time v0.13.1 (signed by HashiCorp)
- Installing hashicorp/tls v4.1.0...
- Installed hashicorp/tls v4.1.0 (signed by HashiCorp)
- Installing hashicorp/cloudinit v2.3.7...
- Installed hashicorp/cloudinit v2.3.7 (signed by HashiCorp)
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% aws configure set region eu-west-1
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform apply
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/eks-managed-node-group/main.tf line 136, in resource "aws_launch_template" "this":
│  136:   dynamic "elastic_gpu_specifications" {
│ 
│ Blocks of type "elastic_gpu_specifications" are not expected here.
╵
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/eks-managed-node-group/main.tf line 144, in resource "aws_launch_template" "this":
│  144:   dynamic "elastic_inference_accelerator" {
│ 
│ Blocks of type "elastic_inference_accelerator" are not expected here.
╵
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/self-managed-node-group/main.tf line 151, in resource "aws_launch_template" "this":
│  151:   dynamic "elastic_gpu_specifications" {
│ 
│ Blocks of type "elastic_gpu_specifications" are not expected here.
╵
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/self-managed-node-group/main.tf line 159, in resource "aws_launch_template" "this":
│  159:   dynamic "elastic_inference_accelerator" {
│ 
│ Blocks of type "elastic_inference_accelerator" are not expected here.
╵
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% sed -i '' 's/version = "20\.8\.4"/version = "20.13.0"/'
sed: -I or -i may not be used with stdin
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% sed -i '' 's/version = "20\.8\.4"/version = "20.13.0"/' *.tf
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% sed -i '' 's/version = "20\.8\.4"/version = "20.13.0"/' main.tf
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% sed -i '' 's/version = "20\.8\.4"/version = "20.13.0"/' main.tf
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.8.4 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc
╷
│ Error: Duplicate module call
│ 
│   on main.tf line 24:
│   24: module "eks" {
│ 
│ A module call named "eks" was already defined at main.tf:4,1-13. Module calls must have unique names within a module.
╵

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% LATEST=$(curl -s https://registry.terraform.io/v1/modules/terraform-aws-modules/eks/aws | jq -r '.versions[].version' | grep -v '-' | sort -V | tail -1)
echo "Latest version: $LATEST"

jq: error (at <stdin>:1): Cannot index string with string "version"
Latest version: 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade                                                                                                                                 


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 5.0.0, >= 5.40.0"...
- Finding hashicorp/tls versions matching ">= 3.0.0"...
- Finding hashicorp/time versions matching ">= 0.9.0"...
- Finding hashicorp/null versions matching ">= 3.0.0"...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0"...
- Using previously-installed hashicorp/aws v6.3.0
- Using previously-installed hashicorp/tls v4.1.0
- Using previously-installed hashicorp/time v0.13.1
- Using previously-installed hashicorp/null v3.2.4
- Using previously-installed hashicorp/cloudinit v2.3.7

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform apply                                                                                                                                         
╷
│ Warning: Deprecated attribute
│ 
│   on .terraform/modules/eks/modules/fargate-profile/main.tf line 40, in data "aws_iam_policy_document" "assume_role_policy":
│   40:         "arn:${data.aws_partition.current.partition}:eks:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:fargateprofile/${var.cluster_name}/*",
│ 
│ The attribute "name" is deprecated. Refer to the provider documentation for details.
╵
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/eks-managed-node-group/main.tf line 137, in resource "aws_launch_template" "this":
│  137:   dynamic "elastic_gpu_specifications" {
│ 
│ Blocks of type "elastic_gpu_specifications" are not expected here.
╵
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/eks-managed-node-group/main.tf line 145, in resource "aws_launch_template" "this":
│  145:   dynamic "elastic_inference_accelerator" {
│ 
│ Blocks of type "elastic_inference_accelerator" are not expected here.
╵
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/self-managed-node-group/main.tf line 193, in resource "aws_launch_template" "this":
│  193:   dynamic "elastic_gpu_specifications" {
│ 
│ Blocks of type "elastic_gpu_specifications" are not expected here.
╵
╷
│ Error: Unsupported block type
│ 
│   on .terraform/modules/eks/modules/self-managed-node-group/main.tf line 201, in resource "aws_launch_template" "this":
│  201:   dynamic "elastic_inference_accelerator" {
│ 
│ Blocks of type "elastic_inference_accelerator" are not expected here.
╵
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade
terraform apply


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0"...
- Finding hashicorp/null versions matching ">= 3.0.0"...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7"...
- Finding hashicorp/tls versions matching ">= 3.0.0"...
- Finding hashicorp/time versions matching ">= 0.9.0"...
- Using previously-installed hashicorp/cloudinit v2.3.7
- Using previously-installed hashicorp/null v3.2.4
- Using previously-installed hashicorp/tls v4.1.0
- Using previously-installed hashicorp/time v0.13.1
╷
│ Error: Failed to query available provider packages
│ 
│ Could not retrieve the list of available versions for provider hashicorp/aws: no available releases match the given constraints >= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7
╵

╷
│ Error: Inconsistent dependency lock file
│ 
│ The following dependency selections recorded in the lock file are inconsistent with the current configuration:
│   - provider registry.terraform.io/hashicorp/aws: locked version selection 6.3.0 doesn't match the updated version constraints ">= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7"
│ 
│ To update the locked dependency selections to match a changed configuration, run:
│   terraform init -upgrade
╵
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% rm -f .terraform.lock.hcl

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade  
terraform apply


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/time versions matching ">= 0.9.0"...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0"...
- Finding hashicorp/null versions matching ">= 3.0.0"...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7"...
- Finding hashicorp/tls versions matching ">= 3.0.0"...
- Installing hashicorp/time v0.13.1...
- Installed hashicorp/time v0.13.1 (signed by HashiCorp)
- Installing hashicorp/cloudinit v2.3.7...
- Installed hashicorp/cloudinit v2.3.7 (signed by HashiCorp)
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)
- Installing hashicorp/tls v4.1.0...
- Installed hashicorp/tls v4.1.0 (signed by HashiCorp)
╷
│ Error: Failed to query available provider packages
│ 
│ Could not retrieve the list of available versions for provider hashicorp/aws: no available releases match the given constraints >= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7
╵

╷
│ Error: Inconsistent dependency lock file
│ 
│ The following dependency selections recorded in the lock file are inconsistent with the current configuration:
│   - provider registry.terraform.io/hashicorp/aws: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/cloudinit: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/null: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/time: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/tls: required by this configuration but no version is selected
│ 
│ To make the initial dependency selections that will initialize the dependency lock file, run:
│   terraform init
╵
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terrafrom -v
zsh: command not found: terrafrom
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform --version 
Terraform v1.5.7
on darwin_amd64

Your version of Terraform is out of date! The latest version
is 1.12.2. You can update by downloading from https://www.terraform.io/downloads.html
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% rm -f .terraform.lock.hcl
terraform init -upgrade
terraform apply


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/time versions matching ">= 0.9.0"...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0"...
- Finding hashicorp/null versions matching ">= 3.0.0"...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7"...
- Finding hashicorp/tls versions matching ">= 3.0.0"...
- Installing hashicorp/cloudinit v2.3.7...
- Installed hashicorp/cloudinit v2.3.7 (signed by HashiCorp)
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)
- Installing hashicorp/tls v4.1.0...
- Installed hashicorp/tls v4.1.0 (signed by HashiCorp)
- Installing hashicorp/time v0.13.1...
- Installed hashicorp/time v0.13.1 (signed by HashiCorp)
╷
│ Error: Failed to query available provider packages
│ 
│ Could not retrieve the list of available versions for provider hashicorp/aws: no available releases match the given constraints >= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7
╵

╷
│ Error: Inconsistent dependency lock file
│ 
│ The following dependency selections recorded in the lock file are inconsistent with the current configuration:
│   - provider registry.terraform.io/hashicorp/aws: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/cloudinit: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/null: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/time: required by this configuration but no version is selected
│   - provider registry.terraform.io/hashicorp/tls: required by this configuration but no version is selected
│ 
│ To make the initial dependency selections that will initialize the dependency lock file, run:
│   terraform init
╵
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% rm -f .terraform.lock.hcl

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc
╷
│ Error: Duplicate required providers configuration
│ 
│   on versions.tf line 4, in terraform:
│    4:   required_providers {
│ 
│ A module may have only one required providers configuration. The required providers were previously configured at main.tf:4,3-21.
╵

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc
╷
│ Error: Duplicate required providers configuration
│ 
│   on versions.tf line 4, in terraform:
│    4:   required_providers {
│ 
│ A module may have only one required providers configuration. The required providers were previously configured at main.tf:4,3-21.
╵

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0, ~> 2.3"...
- Finding hashicorp/null versions matching ">= 3.0.0, ~> 3.2"...
- Finding hashicorp/tls versions matching ">= 3.0.0, ~> 4.1"...
- Finding hashicorp/time versions matching ">= 0.9.0, ~> 0.13"...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7"...
- Installing hashicorp/tls v4.1.0...
- Installed hashicorp/tls v4.1.0 (signed by HashiCorp)
- Installing hashicorp/time v0.13.1...
- Installed hashicorp/time v0.13.1 (signed by HashiCorp)
- Installing hashicorp/cloudinit v2.3.7...
- Installed hashicorp/cloudinit v2.3.7 (signed by HashiCorp)
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)
╷
│ Error: Failed to query available provider packages
│ 
│ Could not retrieve the list of available versions for provider hashicorp/aws: no available releases match the given constraints >= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7
╵

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% rm -f .terraform.lock.hcl

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.13.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/null versions matching ">= 3.0.0, ~> 3.2"...
- Finding hashicorp/tls versions matching ">= 3.0.0, ~> 4.1"...
- Finding hashicorp/time versions matching ">= 0.9.0, ~> 0.13"...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7"...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0, ~> 2.3"...
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)
- Installing hashicorp/tls v4.1.0...
- Installed hashicorp/tls v4.1.0 (signed by HashiCorp)
- Installing hashicorp/time v0.13.1...
- Installed hashicorp/time v0.13.1 (signed by HashiCorp)
- Installing hashicorp/cloudinit v2.3.7...
- Installed hashicorp/cloudinit v2.3.7 (signed by HashiCorp)
╷
│ Error: Failed to query available provider packages
│ 
│ Could not retrieve the list of available versions for provider hashicorp/aws: no available releases match the given constraints >= 4.33.0, >= 5.0.0, >= 5.40.0, ~> 6.7
╵

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% rm -f .terraform.lock.hcl

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform init -upgrade  


Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 19.21.0 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 2.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.1.1 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Finding hashicorp/aws versions matching ">= 4.33.0, >= 4.57.0, >= 5.0.0, ~> 5.0"...
- Finding hashicorp/tls versions matching ">= 3.0.0"...
- Finding hashicorp/kubernetes versions matching ">= 2.10.0"...
- Finding hashicorp/time versions matching ">= 0.9.0"...
- Finding hashicorp/cloudinit versions matching ">= 2.0.0"...
- Installing hashicorp/cloudinit v2.3.7...
- Installed hashicorp/cloudinit v2.3.7 (signed by HashiCorp)
- Installing hashicorp/aws v5.100.0...
- Installed hashicorp/aws v5.100.0 (signed by HashiCorp)
- Installing hashicorp/tls v4.1.0...
- Installed hashicorp/tls v4.1.0 (signed by HashiCorp)
- Installing hashicorp/kubernetes v2.37.1...
- Installed hashicorp/kubernetes v2.37.1 (signed by HashiCorp)
- Installing hashicorp/time v0.13.1...
- Installed hashicorp/time v0.13.1 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform apply 
module.eks.data.aws_caller_identity.current: Reading...
module.eks.module.kms.data.aws_partition.current[0]: Reading...
module.eks.data.aws_partition.current: Reading...
module.eks.module.eks_managed_node_group["default"].data.aws_partition.current: Reading...
module.eks.data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.kms.data.aws_partition.current[0]: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["default"].data.aws_caller_identity.current: Reading...
module.eks.module.eks_managed_node_group["default"].data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.kms.data.aws_caller_identity.current[0]: Reading...
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.module.eks_managed_node_group["default"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2764486067]
module.eks.module.eks_managed_node_group["default"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296]
module.eks.data.aws_caller_identity.current: Read complete after 0s [id=524196012679]
module.eks.data.aws_iam_session_context.current: Reading...
module.eks.data.aws_iam_session_context.current: Read complete after 0s [id=arn:aws:iam::524196012679:user/admin]
module.eks.module.eks_managed_node_group["default"].data.aws_caller_identity.current: Read complete after 0s [id=524196012679]
module.eks.module.kms.data.aws_caller_identity.current[0]: Read complete after 0s [id=524196012679]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # module.eks.data.tls_certificate.this[0] will be read during apply
  # (config refers to values not yet known)
 <= data "tls_certificate" "this" {
      + certificates = (known after apply)
      + id           = (known after apply)
      + url          = (known after apply)
    }

  # module.eks.aws_cloudwatch_log_group.this[0] will be created
  + resource "aws_cloudwatch_log_group" "this" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + log_group_class   = (known after apply)
      + name              = "/aws/eks/my-eks-cluster/cluster"
      + name_prefix       = (known after apply)
      + retention_in_days = 90
      + skip_destroy      = false
      + tags              = {
          + "Name" = "/aws/eks/my-eks-cluster/cluster"
        }
      + tags_all          = {
          + "Name" = "/aws/eks/my-eks-cluster/cluster"
        }
    }

  # module.eks.aws_eks_cluster.this[0] will be created
  + resource "aws_eks_cluster" "this" {
      + arn                           = (known after apply)
      + bootstrap_self_managed_addons = true
      + certificate_authority         = (known after apply)
      + cluster_id                    = (known after apply)
      + created_at                    = (known after apply)
      + enabled_cluster_log_types     = [
          + "api",
          + "audit",
          + "authenticator",
        ]
      + endpoint                      = (known after apply)
      + id                            = (known after apply)
      + identity                      = (known after apply)
      + name                          = "my-eks-cluster"
      + platform_version              = (known after apply)
      + role_arn                      = (known after apply)
      + status                        = (known after apply)
      + tags_all                      = (known after apply)
      + version                       = "1.28"

      + encryption_config {
          + resources = [
              + "secrets",
            ]

          + provider {
              + key_arn = (known after apply)
            }
        }

      + kubernetes_network_config {
          + ip_family         = (known after apply)
          + service_ipv4_cidr = (known after apply)
          + service_ipv6_cidr = (known after apply)
        }

      + timeouts {}

      + vpc_config {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = true
          + endpoint_public_access    = false
          + public_access_cidrs       = [
              + "0.0.0.0/0",
            ]
          + security_group_ids        = (known after apply)
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        }
    }

  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0] will be created
  + resource "aws_iam_openid_connect_provider" "oidc_provider" {
      + arn             = (known after apply)
      + client_id_list  = [
          + "sts.amazonaws.com",
        ]
      + id              = (known after apply)
      + tags            = {
          + "Name" = "my-eks-cluster-eks-irsa"
        }
      + tags_all        = {
          + "Name" = "my-eks-cluster-eks-irsa"
        }
      + thumbprint_list = (known after apply)
      + url             = (known after apply)
    }

  # module.eks.aws_iam_policy.cluster_encryption[0] will be created
  + resource "aws_iam_policy" "cluster_encryption" {
      + arn              = (known after apply)
      + attachment_count = (known after apply)
      + description      = "Cluster encryption policy to allow cluster role to utilize CMK provided"
      + id               = (known after apply)
      + name             = (known after apply)
      + name_prefix      = "my-eks-cluster-cluster-ClusterEncryption"
      + path             = "/"
      + policy           = (known after apply)
      + policy_id        = (known after apply)
      + tags_all         = (known after apply)
    }

  # module.eks.aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "eks.amazonaws.com"
                        }
                      + Sid       = "EKSClusterAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "my-eks-cluster-cluster-"
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = "my-eks-cluster-cluster"
          + policy = jsonencode(
                {
                  + Statement = [
                      + {
                          + Action   = [
                              + "logs:CreateLogGroup",
                            ]
                          + Effect   = "Deny"
                          + Resource = "*"
                        },
                    ]
                  + Version   = "2012-10-17"
                }
            )
        }
    }

  # module.eks.aws_iam_role_policy_attachment.cluster_encryption[0] will be created
  + resource "aws_iam_role_policy_attachment" "cluster_encryption" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = (known after apply)
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      + role       = (known after apply)
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      + role       = (known after apply)
    }

  # module.eks.aws_security_group.cluster[0] will be created
  + resource "aws_security_group" "cluster" {
      + arn                    = (known after apply)
      + description            = "EKS cluster security group"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "my-eks-cluster-cluster-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "my-eks-cluster-cluster"
        }
      + tags_all               = {
          + "Name" = "my-eks-cluster-cluster"
        }
      + vpc_id                 = (known after apply)
    }

  # module.eks.aws_security_group.node[0] will be created
  + resource "aws_security_group" "node" {
      + arn                    = (known after apply)
      + description            = "EKS node shared security group"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "my-eks-cluster-node-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name"                                 = "my-eks-cluster-node"
          + "kubernetes.io/cluster/my-eks-cluster" = "owned"
        }
      + tags_all               = {
          + "Name"                                 = "my-eks-cluster-node"
          + "kubernetes.io/cluster/my-eks-cluster" = "owned"
        }
      + vpc_id                 = (known after apply)
    }

  # module.eks.aws_security_group_rule.cluster["ingress_nodes_443"] will be created
  + resource "aws_security_group_rule" "cluster" {
      + description              = "Node groups to cluster API"
      + from_port                = 443
      + id                       = (known after apply)
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["egress_all"] will be created
  + resource "aws_security_group_rule" "node" {
      + cidr_blocks              = [
          + "0.0.0.0/0",
        ]
      + description              = "Allow all egress"
      + from_port                = 0
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 0
      + type                     = "egress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_443"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node groups"
      + from_port                = 443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 4443/tcp webhook"
      + from_port                = 4443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 4443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 6443/tcp webhook"
      + from_port                = 6443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 6443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 8443/tcp webhook"
      + from_port                = 8443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 8443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 9443/tcp webhook"
      + from_port                = 9443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 9443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node kubelets"
      + from_port                = 10250
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 10250
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Node to node ingress on ephemeral ports"
      + from_port                = 1025
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = true
      + source_security_group_id = (known after apply)
      + to_port                  = 65535
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Node to node CoreDNS"
      + from_port                = 53
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = true
      + source_security_group_id = (known after apply)
      + to_port                  = 53
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Node to node CoreDNS UDP"
      + from_port                = 53
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "udp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = true
      + source_security_group_id = (known after apply)
      + to_port                  = 53
      + type                     = "ingress"
    }

  # module.eks.time_sleep.this[0] will be created
  + resource "time_sleep" "this" {
      + create_duration = "30s"
      + id              = (known after apply)
      + triggers        = {
          + "cluster_certificate_authority_data" = (known after apply)
          + "cluster_endpoint"                   = (known after apply)
          + "cluster_name"                       = "my-eks-cluster"
          + "cluster_version"                    = "1.28"
        }
    }

  # module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Name" = "eks-vpc-default"
        }
      + tags_all               = {
          + "Name" = "eks-vpc-default"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + egress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + ingress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Name" = "eks-vpc-default"
        }
      + tags_all               = {
          + "Name" = "eks-vpc-default"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "eks-vpc-default"
        }
      + tags_all               = {
          + "Name" = "eks-vpc-default"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "eks-vpc-eu-west-1a"
        }
      + tags_all             = {
          + "Name" = "eks-vpc-eu-west-1a"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "eks-vpc"
        }
      + tags_all = {
          + "Name" = "eks-vpc"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Name" = "eks-vpc-eu-west-1a"
        }
      + tags_all                           = {
          + "Name" = "eks-vpc-eu-west-1a"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "eks-vpc-private"
        }
      + tags_all         = {
          + "Name" = "eks-vpc-private"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "eks-vpc-public"
        }
      + tags_all         = {
          + "Name" = "eks-vpc-public"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[2] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[2] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-west-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "eks-vpc-private-eu-west-1a"
        }
      + tags_all                                       = {
          + "Name" = "eks-vpc-private-eu-west-1a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-west-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "eks-vpc-private-eu-west-1b"
        }
      + tags_all                                       = {
          + "Name" = "eks-vpc-private-eu-west-1b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[2] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-west-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "eks-vpc-private-eu-west-1c"
        }
      + tags_all                                       = {
          + "Name" = "eks-vpc-private-eu-west-1c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-west-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.101.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "eks-vpc-public-eu-west-1a"
        }
      + tags_all                                       = {
          + "Name" = "eks-vpc-public-eu-west-1a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-west-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.102.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "eks-vpc-public-eu-west-1b"
        }
      + tags_all                                       = {
          + "Name" = "eks-vpc-public-eu-west-1b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[2] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-west-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.103.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "eks-vpc-public-eu-west-1c"
        }
      + tags_all                                       = {
          + "Name" = "eks-vpc-public-eu-west-1c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "eks-vpc"
        }
      + tags_all                             = {
          + "Name" = "eks-vpc"
        }
    }

  # module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0] will be created
  + resource "aws_eks_node_group" "this" {
      + ami_type               = (known after apply)
      + arn                    = (known after apply)
      + capacity_type          = (known after apply)
      + cluster_name           = "my-eks-cluster"
      + disk_size              = (known after apply)
      + id                     = (known after apply)
      + instance_types         = [
          + "t3.medium",
        ]
      + node_group_name        = (known after apply)
      + node_group_name_prefix = "default-"
      + node_role_arn          = (known after apply)
      + release_version        = (known after apply)
      + resources              = (known after apply)
      + status                 = (known after apply)
      + subnet_ids             = (known after apply)
      + tags                   = {
          + "Name" = "default"
        }
      + tags_all               = {
          + "Name" = "default"
        }
      + version                = "1.28"

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = (known after apply)
        }

      + scaling_config {
          + desired_size = 2
          + max_size     = 3
          + min_size     = 1
        }

      + timeouts {}

      + update_config {
          + max_unavailable_percentage = 33
        }
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "EKSNodeAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "EKS managed node group IAM role"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "default-eks-node-group-"
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0] will be created
  + resource "aws_launch_template" "this" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + description            = "Custom launch template for default EKS managed node group"
      + id                     = (known after apply)
      + latest_version         = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "default-"
      + tags_all               = (known after apply)
      + update_default_version = true
      + vpc_security_group_ids = (known after apply)

      + metadata_options {
          + http_endpoint               = "enabled"
          + http_protocol_ipv6          = (known after apply)
          + http_put_response_hop_limit = 2
          + http_tokens                 = "required"
          + instance_metadata_tags      = (known after apply)
        }

      + monitoring {
          + enabled = true
        }

      + tag_specifications {
          + resource_type = "instance"
          + tags          = {
              + "Name" = "default"
            }
        }
      + tag_specifications {
          + resource_type = "network-interface"
          + tags          = {
              + "Name" = "default"
            }
        }
      + tag_specifications {
          + resource_type = "volume"
          + tags          = {
              + "Name" = "default"
            }
        }
    }

  # module.eks.module.kms.data.aws_iam_policy_document.this[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "this" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = []

      + statement {
          + actions   = [
              + "kms:CancelKeyDeletion",
              + "kms:Create*",
              + "kms:Delete*",
              + "kms:Describe*",
              + "kms:Disable*",
              + "kms:Enable*",
              + "kms:Get*",
              + "kms:ImportKeyMaterial",
              + "kms:List*",
              + "kms:Put*",
              + "kms:ReplicateKey",
              + "kms:Revoke*",
              + "kms:ScheduleKeyDeletion",
              + "kms:TagResource",
              + "kms:UntagResource",
              + "kms:Update*",
            ]
          + resources = [
              + "*",
            ]
          + sid       = "KeyAdministration"

          + principals {
              + identifiers = [
                  + "arn:aws:iam::524196012679:user/admin",
                ]
              + type        = "AWS"
            }
        }
      + statement {
          + actions   = [
              + "kms:Decrypt",
              + "kms:DescribeKey",
              + "kms:Encrypt",
              + "kms:GenerateDataKey*",
              + "kms:ReEncrypt*",
            ]
          + resources = [
              + "*",
            ]
          + sid       = "KeyUsage"

          + principals {
              + identifiers = [
                  + (known after apply),
                ]
              + type        = "AWS"
            }
        }
    }

  # module.eks.module.kms.aws_kms_alias.this["cluster"] will be created
  + resource "aws_kms_alias" "this" {
      + arn            = (known after apply)
      + id             = (known after apply)
      + name           = "alias/eks/my-eks-cluster"
      + name_prefix    = (known after apply)
      + target_key_arn = (known after apply)
      + target_key_id  = (known after apply)
    }

  # module.eks.module.kms.aws_kms_key.this[0] will be created
  + resource "aws_kms_key" "this" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + description                        = "my-eks-cluster cluster encryption key"
      + enable_key_rotation                = true
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = false
      + policy                             = (known after apply)
      + rotation_period_in_days            = (known after apply)
      + tags_all                           = (known after apply)
    }

Plan: 53 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with module.eks.aws_iam_role.this[0],
│   on .terraform/modules/eks/main.tf line 293, in resource "aws_iam_role" "this":
│  293: resource "aws_iam_role" "this" {
│ 
│ inline_policy is deprecated. Use the aws_iam_role_policy resource instead. If Terraform should exclusively manage all inline policy associations (the current behavior of this
│ argument), use the aws_iam_role_policies_exclusive resource as well.
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.eks.aws_cloudwatch_log_group.this[0]: Creating...
module.vpc.aws_vpc.this[0]: Creating...
module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0]: Creating...
module.eks.aws_iam_role.this[0]: Creating...
module.eks.aws_cloudwatch_log_group.this[0]: Creation complete after 0s [id=/aws/eks/my-eks-cluster/cluster]
module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0]: Creation complete after 1s [id=default-eks-node-group-20250711130645655300000001]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Creating...
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Creating...
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Creating...
module.eks.aws_iam_role.this[0]: Creation complete after 1s [id=my-eks-cluster-cluster-20250711130645656100000002]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Creating...
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Creating...
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Reading...
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=77893387]
module.eks.module.kms.aws_kms_key.this[0]: Creating...
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Creation complete after 0s [id=default-eks-node-group-20250711130645655300000001-20250711130646842100000003]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Creation complete after 0s [id=default-eks-node-group-20250711130645655300000001-20250711130646904200000004]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Creation complete after 0s [id=default-eks-node-group-20250711130645655300000001-20250711130647044500000005]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Creation complete after 0s [id=my-eks-cluster-cluster-20250711130645656100000002-20250711130647226400000007]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Creation complete after 0s [id=my-eks-cluster-cluster-20250711130645656100000002-20250711130647224100000006]
module.vpc.aws_vpc.this[0]: Still creating... [10s elapsed]
module.eks.module.kms.aws_kms_key.this[0]: Still creating... [10s elapsed]
module.vpc.aws_vpc.this[0]: Creation complete after 12s [id=vpc-0128e8b6ea6dcd28f]
module.vpc.aws_internet_gateway.this[0]: Creating...
module.vpc.aws_default_route_table.default[0]: Creating...
module.vpc.aws_route_table.public[0]: Creating...
module.vpc.aws_default_security_group.this[0]: Creating...
module.vpc.aws_subnet.private[1]: Creating...
module.vpc.aws_subnet.public[1]: Creating...
module.vpc.aws_subnet.private[2]: Creating...
module.vpc.aws_subnet.public[2]: Creating...
module.vpc.aws_default_network_acl.this[0]: Creating...
module.vpc.aws_default_route_table.default[0]: Creation complete after 0s [id=rtb-04c9ea0e474180df6]
module.vpc.aws_subnet.public[0]: Creating...
module.vpc.aws_internet_gateway.this[0]: Creation complete after 0s [id=igw-0d7755a3024b86d18]
module.vpc.aws_route_table.private[0]: Creating...
module.vpc.aws_route_table.public[0]: Creation complete after 0s [id=rtb-0667b256a67d6b461]
module.vpc.aws_subnet.private[0]: Creating...
module.vpc.aws_subnet.public[2]: Creation complete after 0s [id=subnet-051124211e090a831]
module.eks.aws_security_group.node[0]: Creating...
module.vpc.aws_subnet.public[1]: Creation complete after 1s [id=subnet-05db99b49047b0ffd]
module.eks.aws_security_group.cluster[0]: Creating...
module.vpc.aws_subnet.private[1]: Creation complete after 1s [id=subnet-0207b1e7a4735fe2a]
module.vpc.aws_eip.nat[0]: Creating...
module.vpc.aws_subnet.public[0]: Creation complete after 1s [id=subnet-0fa0d4ef8276b2f92]
module.vpc.aws_route.public_internet_gateway[0]: Creating...
module.vpc.aws_default_network_acl.this[0]: Creation complete after 1s [id=acl-0083f100376807a32]
module.vpc.aws_route_table_association.public[1]: Creating...
module.vpc.aws_route_table.private[0]: Creation complete after 1s [id=rtb-0677551884ad30011]
module.vpc.aws_subnet.private[0]: Creation complete after 1s [id=subnet-0dba9b337154d97b6]
module.vpc.aws_route_table_association.public[0]: Creating...
module.vpc.aws_route_table_association.public[2]: Creating...
module.vpc.aws_route_table_association.public[1]: Creation complete after 0s [id=rtbassoc-05abb27d28ff2ec20]
module.vpc.aws_route_table_association.public[0]: Creation complete after 0s [id=rtbassoc-079b06a483a95ee5c]
module.vpc.aws_route.public_internet_gateway[0]: Creation complete after 0s [id=r-rtb-0667b256a67d6b4611080289494]
module.vpc.aws_route_table_association.public[2]: Creation complete after 0s [id=rtbassoc-071d85dbc8e36a5ac]
module.vpc.aws_default_security_group.this[0]: Creation complete after 2s [id=sg-0966fe53f93135764]
module.vpc.aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-024bd17f1a66e7e7c]
module.vpc.aws_subnet.private[2]: Creation complete after 2s [id=subnet-066b431a490aa085e]
module.vpc.aws_route_table_association.private[2]: Creating...
module.vpc.aws_route_table_association.private[1]: Creating...
module.vpc.aws_route_table_association.private[0]: Creating...
module.vpc.aws_nat_gateway.this[0]: Creating...
module.vpc.aws_route_table_association.private[0]: Creation complete after 0s [id=rtbassoc-0450d94b618bc5e13]
module.vpc.aws_route_table_association.private[1]: Creation complete after 0s [id=rtbassoc-087f19071fea5c386]
module.vpc.aws_route_table_association.private[2]: Creation complete after 0s [id=rtbassoc-00bbc6211cfe9b097]
module.eks.aws_security_group.cluster[0]: Creation complete after 1s [id=sg-02610bfd2bc4cbc28]
module.eks.aws_security_group.node[0]: Creation complete after 2s [id=sg-0b608979243210b4d]
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Creating...
module.eks.aws_security_group_rule.node["egress_all"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Creating...
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Creation complete after 1s [id=sgrule-1523386350]
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Creation complete after 2s [id=sgrule-2475647096]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Creation complete after 2s [id=sgrule-1234254799]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Creation complete after 0s [id=sgrule-3087015135]
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Creation complete after 3s [id=sgrule-3796001025]
module.eks.aws_security_group_rule.node["egress_all"]: Creation complete after 3s [id=sgrule-2195677435]
module.eks.module.kms.aws_kms_key.this[0]: Creation complete after 17s [id=5da33b1b-e456-4211-b0d3-24c1e8bc17a0]
module.eks.module.kms.aws_kms_alias.this["cluster"]: Creating...
module.eks.aws_iam_policy.cluster_encryption[0]: Creating...
module.eks.module.kms.aws_kms_alias.this["cluster"]: Creation complete after 0s [id=alias/eks/my-eks-cluster]
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Creation complete after 4s [id=sgrule-2209449408]
module.eks.aws_iam_policy.cluster_encryption[0]: Creation complete after 0s [id=arn:aws:iam::524196012679:policy/my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Creation complete after 5s [id=sgrule-4080432836]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Creation complete after 1s [id=my-eks-cluster-cluster-20250711130645656100000002-2025071113070454220000000e]
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Creation complete after 5s [id=sgrule-669918767]
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Creation complete after 5s [id=sgrule-2488107946]
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Creation complete after 4s [id=sgrule-758122500]
module.eks.aws_eks_cluster.this[0]: Creating...
module.vpc.aws_nat_gateway.this[0]: Still creating... [10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Creation complete after 1m34s [id=nat-0d2646ab2743b33f1]
module.vpc.aws_route.private_nat_gateway[0]: Creating...
module.vpc.aws_route.private_nat_gateway[0]: Creation complete after 1s [id=r-rtb-0677551884ad300111080289494]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m51s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m1s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m11s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m21s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m31s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m41s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m51s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m1s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m11s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m21s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m31s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m41s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m51s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m1s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m11s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m21s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m31s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m41s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m51s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m1s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m11s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m21s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m31s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m41s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m51s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m1s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m11s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m21s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m31s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m41s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m51s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m1s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m11s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m21s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m31s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m41s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m51s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [8m1s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [8m11s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [8m21s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [8m31s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [8m41s elapsed]
module.eks.aws_eks_cluster.this[0]: Creation complete after 8m45s [id=my-eks-cluster]
module.eks.data.tls_certificate.this[0]: Reading...
module.eks.time_sleep.this[0]: Creating...
module.eks.data.tls_certificate.this[0]: Read complete after 0s [id=08332733484502a5c0ee4f44b59e6f9baaa72352]
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Creating...
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Creation complete after 1s [id=arn:aws:iam::524196012679:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B]
module.eks.time_sleep.this[0]: Still creating... [10s elapsed]
module.eks.time_sleep.this[0]: Still creating... [20s elapsed]
module.eks.time_sleep.this[0]: Still creating... [30s elapsed]
module.eks.time_sleep.this[0]: Creation complete after 30s [id=2025-07-11T13:16:21Z]
module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0]: Creating...
module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0]: Creation complete after 6s [id=lt-02e467a42b680b99e]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Creating...
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [1m0s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [1m10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [1m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [1m30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [1m40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [1m50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [2m0s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [2m10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [2m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [2m30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [2m40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still creating... [2m50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Creation complete after 2m59s [id=my-eks-cluster:default-20250711131627437600000011]
╷
│ Warning: Argument is deprecated
│ 
│   with module.eks.aws_iam_role.this[0],
│   on .terraform/modules/eks/main.tf line 293, in resource "aws_iam_role" "this":
│  293: resource "aws_iam_role" "this" {
│ 
│ inline_policy is deprecated. Use the aws_iam_role_policy resource instead. If Terraform should exclusively manage all inline policy associations (the current behavior of this
│ argument), use the aws_iam_role_policies_exclusive resource as well.
╵

Apply complete! Resources: 53 added, 0 changed, 0 destroyed.
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% aws eks --region eu-west-1 update-kubeconfig --name my-eks-cluster
kubectl get nodes
Added new context arn:aws:eks:eu-west-1:524196012679:cluster/my-eks-cluster to /Users/sgworker/.kube/config
E0711 15:29:24.685234   98135 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com/api?timeout=32s\": dial tcp 10.0.2.119:443: i/o timeout"
E0711 15:29:54.688460   98135 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com/api?timeout=32s\": dial tcp 10.0.2.119:443: i/o timeout"
^C
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% aws eks describe-cluster --name my-eks-cluster --region eu-west-1
{
    "cluster": {
        "name": "my-eks-cluster",
        "arn": "arn:aws:eks:eu-west-1:524196012679:cluster/my-eks-cluster",
        "createdAt": "2025-07-11T15:07:08.624000+02:00",
        "version": "1.28",
        "endpoint": "https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com",
        "roleArn": "arn:aws:iam::524196012679:role/my-eks-cluster-cluster-20250711130645656100000002",
        "resourcesVpcConfig": {
            "subnetIds": [
                "subnet-0dba9b337154d97b6",
                "subnet-066b431a490aa085e",
                "subnet-0207b1e7a4735fe2a"
            ],
            "securityGroupIds": [
                "sg-02610bfd2bc4cbc28"
            ],
            "clusterSecurityGroupId": "sg-032adfad7e43af606",
            "vpcId": "vpc-0128e8b6ea6dcd28f",
            "endpointPublicAccess": false,
            "endpointPrivateAccess": true,
            "publicAccessCidrs": [
                "0.0.0.0/0"
            ]
        },
        "kubernetesNetworkConfig": {
            "serviceIpv4Cidr": "172.20.0.0/16",
            "ipFamily": "ipv4",
            "elasticLoadBalancing": {
                "enabled": false
            }
        },
        "logging": {
            "clusterLogging": [
                {
                    "types": [
                        "api",
                        "audit",
                        "authenticator"
                    ],
                    "enabled": true
                },
                {
                    "types": [
                        "controllerManager",
                        "scheduler"
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% aws eks describe-cluster --name my-eks-cluster --region eu-west-1
{
    "cluster": {
        "name": "my-eks-cluster",
        "arn": "arn:aws:eks:eu-west-1:524196012679:cluster/my-eks-cluster",
        "createdAt": "2025-07-11T15:07:08.624000+02:00",
        "version": "1.28",
        "endpoint": "https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com",
        "roleArn": "arn:aws:iam::524196012679:role/my-eks-cluster-cluster-20250711130645656100000002",
        "resourcesVpcConfig": {
            "subnetIds": [
                "subnet-0dba9b337154d97b6",
                "subnet-066b431a490aa085e",
                "subnet-0207b1e7a4735fe2a"
            ],
            "securityGroupIds": [
                "sg-02610bfd2bc4cbc28"
            ],
            "clusterSecurityGroupId": "sg-032adfad7e43af606",
            "vpcId": "vpc-0128e8b6ea6dcd28f",
            "endpointPublicAccess": false,
            "endpointPrivateAccess": true,
            "publicAccessCidrs": [
                "0.0.0.0/0"
            ]
        },
        "kubernetesNetworkConfig": {
            "serviceIpv4Cidr": "172.20.0.0/16",
            "ipFamily": "ipv4",
            "elasticLoadBalancing": {
                "enabled": false
            }
        },
        "logging": {
            "clusterLogging": [
                {
                    "types": [
                        "api",
                        "audit",
                        "authenticator"
                    ],
                    "enabled": true
                },
                {
                    "types": [
                        "controllerManager",
                        "scheduler"
                    ],
                    "enabled": false
                }
            ]
        },
        "identity": {
            "oidc": {
                "issuer": "https://oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B"
            }
        },
        "status": "ACTIVE",
        "certificateAuthority": {
            "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTGk1YTQzMzdiMnN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBM01URXhNekEyTWpGYUZ3MHpOVEEzTURreE16RXhNakZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNWczhwSWMzMzZCZkVSYm5LVnFuNHFrSWk3RHp6UEl6Vm9xODlBV09adzVZUE9pTGJHaW1QSmRyVFcKeDNkQUo5bXNhdy9FTndiQ3k2OTEyaUZVK09WaTAwQ0JRdEJnOUN6NXgzN2QxeStOVzg4NzVBbk9Ody8rSG1ncQpnUi9vdWN6TFhXUFhUMWNGS0pCaUU5N0tVRmhhOGxTZnZTV09QZysrc2h1dXJPUXRJNEU1c3JqM1BOTmUyMDYzClZIMjBYaUl3RkxIQllWZUYwc3RpNHgwWm40TmdWNXF3TmptS2t1N2wwcjB0KzZ0VHhkV0w3TmFRenRCSk9hTFkKcWJpbkVYTTB1eG1jTHc5SWVHeHJjeExqWS8zMHRPaGxYRUNEWitiMEQ5Qm15TEh2ZWxCNjA2VG0vb0dmcmQyNApCdFZLd0wySXhYZUd3TFI3cHhXWmJlMVNydGI1QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJScWNlRWVxNjNUT285NjROZkZlNHVrejY1RDlEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmJGVzNEdEVrdAppOC82NkdmK3lxZ0VQR3dWeEhhbUVrNm5SSVdrVmlGK3dWdkZHTU9ZVkViejJLVHYyZ3JYdjFsZ0Z3K3Y0d0svCmhqd2tOUHdmMzlVRTYzdVNZR2xiNjZFbWtnZlhrbHpaVENrZXJWVS9lYnJMSnd1b3VCbU1WNzk4ek9ka1NLSjQKNnJxdE01eXo0bis5NlMrRFVtYVN1Q1N0ZmVGRGRqL2x4ZTcvc2VFWHcyZ0QwZlhvNHNZWW00Z0xnM3dJbjRoUApkdHMyNnVLZGxnWTVTMGloNGM3TUErQ2tJYjlBdGhvTU53OE1rS1RlOEhBODBnY2NZK3poMTVSdmF1WlBaVkFlCm5vTHJrd0RvRVpIZDMweFJUd1NzRmxZSWhQY3dSanJYaGVWNXc3aE5SbjFTWVhLT1kyM2ZLV0ZzdmtzRDk5ODEKK3pNTW9LQnRsbE9iCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        "platformVersion": "eks.46",
        "tags": {},
        "encryptionConfig": [
            {
                "resources": [
                    "secrets"
                ],
                "provider": {
                    "keyArn": "arn:aws:kms:eu-west-1:524196012679:key/5da33b1b-e456-4211-b0d3-24c1e8bc17a0"
                }
            }
        ],
        "health": {
            "issues": []
        },
        "accessConfig": {
            "authenticationMode": "CONFIG_MAP"
        },
        "upgradePolicy": {
            "supportType": "EXTENDED"
        }
    }
}
(END)
                {
                    "types": [
                        "controllerManager",
                        "scheduler"
                    ],
                    "enabled": false
                }
            ]
        },
        "identity": {
            "oidc": {
                "issuer": "https://oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B"
            }
        },
        "status": "ACTIVE",
        "certificateAuthority": {
            "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTGk1YTQzMzdiMnN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBM01URXhNekEyTWpGYUZ3MHpOVEEzTURreE16RXhNakZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNWczhwSWMzMzZCZkVSYm5LVnFuNHFrSWk3RHp6UEl6Vm9xODlBV09adzVZUE9pTGJHaW1QSmRyVFcKeDNkQUo5bXNhdy9FTndiQ3k2OTEyaUZVK09WaTAwQ0JRdEJnOUN6NXgzN2QxeStOVzg4NzVBbk9Ody8rSG1ncQpnUi9vdWN6TFhXUFhUMWNGS0pCaUU5N0tVRmhhOGxTZnZTV09QZysrc2h1dXJPUXRJNEU1c3JqM1BOTmUyMDYzClZIMjBYaUl3RkxIQllWZUYwc3RpNHgwWm40TmdWNXF3TmptS2t1N2wwcjB0KzZ0VHhkV0w3TmFRenRCSk9hTFkKcWJpbkVYTTB1eG1jTHc5SWVHeHJjeExqWS8zMHRPaGxYRUNEWitiMEQ5Qm15TEh2ZWxCNjA2VG0vb0dmcmQyNApCdFZLd0wySXhYZUd3TFI3cHhXWmJlMVNydGI1QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJScWNlRWVxNjNUT285NjROZkZlNHVrejY1RDlEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmJGVzNEdEVrdAppOC82NkdmK3lxZ0VQR3dWeEhhbUVrNm5SSVdrVmlGK3dWdkZHTU9ZVkViejJLVHYyZ3JYdjFsZ0Z3K3Y0d0svCmhqd2tOUHdmMzlVRTYzdVNZR2xiNjZFbWtnZlhrbHpaVENrZXJWVS9lYnJMSnd1b3VCbU1WNzk4ek9ka1NLSjQKNnJxdE01eXo0bis5NlMrRFVtYVN1Q1N0ZmVGRGRqL2x4ZTcvc2VFWHcyZ0QwZlhvNHNZWW00Z0xnM3dJbjRoUApkdHMyNnVLZGxnWTVTMGloNGM3TUErQ2tJYjlBdGhvTU53OE1rS1RlOEhBODBnY2NZK3poMTVSdmF1WlBaVkFlCm5vTHJrd0RvRVpIZDMweFJUd1NzRmxZSWhQY3dSanJYaGVWNXc3aE5SbjFTWVhLT1kyM2ZLV0ZzdmtzRDk5ODEKK3pNTW9LQnRsbE9iCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        "platformVersion": "eks.46",
        "tags": {},
        "encryptionConfig": [
            {
                "resources": [
                    "secrets"
                ],
                "provider": {
                    "keyArn": "arn:aws:kms:eu-west-1:524196012679:key/5da33b1b-e456-4211-b0d3-24c1e8bc17a0"
                }
            }
        ],
        "health": {
            "issues": []
        },
        "accessConfig": {
            "authenticationMode": "CONFIG_MAP"
        },
        "upgradePolicy": {
            "supportType": "EXTENDED"
        }
    }
}
(END)
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% aws eks update-cluster-config \
    --region eu-west-1 \
    --name my-eks-cluster \
    --resources-vpc-config endpointPublicAccess=true,endpointPrivateAccess=true

{
    "update": {
        "id": "cde24bb0-2690-3eca-b0ab-e5a9c6fee0a8",
        "status": "InProgress",
        "type": "EndpointAccessUpdate",
        "params": [
            {
                "type": "EndpointPublicAccess",
                "value": "true"
            },
            {
                "type": "EndpointPrivateAccess",
                "value": "true"
            },
            {
                "type": "PublicAccessCidrs",
                "value": "[\"0.0.0.0/0\"]"
            }
        ],
        "createdAt": "2025-07-11T15:31:42.778000+02:00",
        "errors": []
    }
}
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% aws eks --region eu-west-1 update-kubeconfig --name my-eks-cluster
kubectl get nodes
Updated context arn:aws:eks:eu-west-1:524196012679:cluster/my-eks-cluster in /Users/sgworker/.kube/config

E0711 15:32:58.640334    5584 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com/api?timeout=32s\": dial tcp 10.0.2.119:443: i/o timeout"
E0711 15:33:28.644432    5584 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com/api?timeout=32s\": dial tcp 10.0.2.119:443: i/o timeout"
NAME                                       STATUS   ROLES    AGE   VERSION
ip-10-0-1-155.eu-west-1.compute.internal   Ready    <none>   14m   v1.28.15-eks-473151a
ip-10-0-3-18.eu-west-1.compute.internal    Ready    <none>   14m   v1.28.15-eks-473151a
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% aws eks --region eu-west-1 update-kubeconfig --name my-eks-cluster
kubectl get nodes
Updated context arn:aws:eks:eu-west-1:524196012679:cluster/my-eks-cluster in /Users/sgworker/.kube/config
NAME                                       STATUS   ROLES    AGE   VERSION
ip-10-0-1-155.eu-west-1.compute.internal   Ready    <none>   15m   v1.28.15-eks-473151a
ip-10-0-3-18.eu-west-1.compute.internal    Ready    <none>   15m   v1.28.15-eks-473151a
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% kubectl apply -f nginx-deployment.yaml
error: the path "nginx-deployment.yaml" does not exist
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% ls-al
zsh: command not found: ls-al
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% ls -al
total 240
drwxr-xr-x  9 sgworker  staff     288 11 Jul 15:19 .
drwxr-xr-x  5 sgworker  staff     160 11 Jul 14:17 ..
drwxr-xr-x  4 sgworker  staff     128 11 Jul 14:19 .terraform
-rw-r--r--  1 sgworker  staff    5756 11 Jul 15:06 .terraform.lock.hcl
-rw-r--r--  1 sgworker  staff     962 11 Jul 15:05 main.tf
-rw-r--r--  1 sgworker  staff       0 11 Jul 14:30 outputs.tf
-rw-r--r--  1 sgworker  staff  107818 11 Jul 15:19 terraform.tfstate
-rw-r--r--  1 sgworker  staff       0 11 Jul 14:16 terraform.tfvars
-rw-r--r--  1 sgworker  staff       0 11 Jul 14:30 variables.tf
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% ls -al
total 248
drwxr-xr-x  10 sgworker  staff     320 11 Jul 15:47 .
drwxr-xr-x   4 sgworker  staff     128 11 Jul 15:47 ..
drwxr-xr-x   4 sgworker  staff     128 11 Jul 14:19 .terraform
-rw-r--r--   1 sgworker  staff    5756 11 Jul 15:06 .terraform.lock.hcl
-rw-r--r--   1 sgworker  staff     962 11 Jul 15:05 main.tf
-rw-r--r--   1 sgworker  staff     480 11 Jul 15:47 nginx-deployment.yaml
-rw-r--r--   1 sgworker  staff       0 11 Jul 14:30 outputs.tf
-rw-r--r--   1 sgworker  staff  107818 11 Jul 15:19 terraform.tfstate
-rw-r--r--   1 sgworker  staff       0 11 Jul 14:16 terraform.tfvars
-rw-r--r--   1 sgworker  staff       0 11 Jul 14:30 variables.tf
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% kubectl apply -f nginx-deployment.yaml
deployment.apps/nginx-deployment created
service/nginx-service created
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% kubectl get service nginx-service
NAME            TYPE           CLUSTER-IP     EXTERNAL-IP                                                              PORT(S)        AGE
nginx-service   LoadBalancer   172.20.46.49   aa8fa9d038a804602bba24aff2b4ca49-389869002.eu-west-1.elb.amazonaws.com   80:32208/TCP   9s
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% kubectl get pods -l app=nginx

NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-7c79c4bf97-cd62g   1/1     Running   0          81s
nginx-deployment-7c79c4bf97-klgqm   1/1     Running   0          81s
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% kubectl get endpoints nginx-service

NAME            ENDPOINTS                   AGE
nginx-service   10.0.1.96:80,10.0.3.23:80   106s
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% curl http://aa8fa9d038a804602bba24aff2b4ca49-389869002.eu-west-1.elb.amazonaws.com

<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% ansible-playbook deploy-nginx.yml
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% cd ansible_deployment 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% ansible-playbook deploy-nginx.yml
ERROR! Empty playbook, nothing to do: /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment/deploy-nginx.yml
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% ansible-playbook deploy-nginx.yml

PLAY [Deploy nginx app on EKS cluster] ************************************************************************************************************************************************************************************************************************************

TASK [Create nginx deployment] ********************************************************************************************************************************************************************************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed to create object: Namespace is required for apps/v1.Deployment"}

PLAY RECAP ****************************************************************************************************************************************************************************************************************************************************************
localhost                  : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% ansible-playbook deploy-nginx.yml

PLAY [Deploy nginx app on EKS cluster] ************************************************************************************************************************************************************************************************************************************

TASK [Create nginx deployment] ********************************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create nginx service (LoadBalancer)] ********************************************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY RECAP ****************************************************************************************************************************************************************************************************************************************************************
localhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% ansible-playbook deploy-nginx.yml

PLAY [Deploy nginx with custom default site on EKS cluster] ***************************************************************************************************************************************************************************************************************

TASK [Create ConfigMap with custom index.html] ****************************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create nginx deployment with custom html volume] ********************************************************************************************************************************************************************************************************************
changed: [localhost]

TASK [Create nginx service] ***********************************************************************************************************************************************************************************************************************************************
ok: [localhost]

PLAY RECAP ****************************************************************************************************************************************************************************************************************************************************************
localhost                  : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% kubectl get svc nginx-service

NAME            TYPE           CLUSTER-IP     EXTERNAL-IP                                                              PORT(S)        AGE
nginx-service   LoadBalancer   172.20.46.49   aa8fa9d038a804602bba24aff2b4ca49-389869002.eu-west-1.elb.amazonaws.com   80:32208/TCP   12m
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% 
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% terraform destroy

No changes. No objects need to be destroyed.

Either you have not created any objects yet or the existing objects were already deleted outside of Terraform.

Destroy complete! Resources: 0 destroyed.
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster/ansible_deployment 
% cd ..
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% terraform destroy
module.eks.data.aws_caller_identity.current: Reading...
module.eks.module.kms.data.aws_partition.current[0]: Reading...
module.eks.data.aws_partition.current: Reading...
module.eks.module.eks_managed_node_group["default"].data.aws_partition.current: Reading...
module.eks.data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["default"].data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.kms.data.aws_partition.current[0]: Read complete after 0s [id=aws]
module.eks.module.kms.data.aws_caller_identity.current[0]: Reading...
module.eks.module.eks_managed_node_group["default"].data.aws_caller_identity.current: Reading...
module.eks.aws_cloudwatch_log_group.this[0]: Refreshing state... [id=/aws/eks/my-eks-cluster/cluster]
module.vpc.aws_vpc.this[0]: Refreshing state... [id=vpc-0128e8b6ea6dcd28f]
module.eks.module.eks_managed_node_group["default"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.module.eks_managed_node_group["default"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296]
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2764486067]
module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0]: Refreshing state... [id=default-eks-node-group-20250711130645655300000001]
module.eks.aws_iam_role.this[0]: Refreshing state... [id=my-eks-cluster-cluster-20250711130645656100000002]
module.eks.data.aws_caller_identity.current: Read complete after 0s [id=524196012679]
module.eks.data.aws_iam_session_context.current: Reading...
module.eks.data.aws_iam_session_context.current: Read complete after 0s [id=arn:aws:iam::524196012679:user/admin]
module.eks.module.eks_managed_node_group["default"].data.aws_caller_identity.current: Read complete after 0s [id=524196012679]
module.eks.module.kms.data.aws_caller_identity.current[0]: Read complete after 1s [id=524196012679]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Refreshing state... [id=default-eks-node-group-20250711130645655300000001-20250711130646842100000003]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Refreshing state... [id=default-eks-node-group-20250711130645655300000001-20250711130647044500000005]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Refreshing state... [id=default-eks-node-group-20250711130645655300000001-20250711130646904200000004]
module.vpc.aws_default_security_group.this[0]: Refreshing state... [id=sg-0966fe53f93135764]
module.vpc.aws_default_route_table.default[0]: Refreshing state... [id=rtb-04c9ea0e474180df6]
module.vpc.aws_route_table.public[0]: Refreshing state... [id=rtb-0667b256a67d6b461]
module.vpc.aws_subnet.private[2]: Refreshing state... [id=subnet-066b431a490aa085e]
module.vpc.aws_subnet.private[0]: Refreshing state... [id=subnet-0dba9b337154d97b6]
module.vpc.aws_default_network_acl.this[0]: Refreshing state... [id=acl-0083f100376807a32]
module.vpc.aws_subnet.private[1]: Refreshing state... [id=subnet-0207b1e7a4735fe2a]
module.vpc.aws_route_table.private[0]: Refreshing state... [id=rtb-0677551884ad30011]
module.eks.aws_security_group.cluster[0]: Refreshing state... [id=sg-02610bfd2bc4cbc28]
module.vpc.aws_subnet.public[2]: Refreshing state... [id=subnet-051124211e090a831]
module.vpc.aws_subnet.public[0]: Refreshing state... [id=subnet-0fa0d4ef8276b2f92]
module.vpc.aws_subnet.public[1]: Refreshing state... [id=subnet-05db99b49047b0ffd]
module.vpc.aws_internet_gateway.this[0]: Refreshing state... [id=igw-0d7755a3024b86d18]
module.eks.aws_security_group.node[0]: Refreshing state... [id=sg-0b608979243210b4d]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Refreshing state... [id=my-eks-cluster-cluster-20250711130645656100000002-20250711130647224100000006]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Refreshing state... [id=my-eks-cluster-cluster-20250711130645656100000002-20250711130647226400000007]
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Reading...
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=77893387]
module.eks.module.kms.aws_kms_key.this[0]: Refreshing state... [id=5da33b1b-e456-4211-b0d3-24c1e8bc17a0]
module.vpc.aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-0450d94b618bc5e13]
module.vpc.aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-087f19071fea5c386]
module.vpc.aws_route_table_association.private[2]: Refreshing state... [id=rtbassoc-00bbc6211cfe9b097]
module.vpc.aws_eip.nat[0]: Refreshing state... [id=eipalloc-024bd17f1a66e7e7c]
module.vpc.aws_route.public_internet_gateway[0]: Refreshing state... [id=r-rtb-0667b256a67d6b4611080289494]
module.vpc.aws_route_table_association.public[2]: Refreshing state... [id=rtbassoc-071d85dbc8e36a5ac]
module.vpc.aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-079b06a483a95ee5c]
module.vpc.aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-05abb27d28ff2ec20]
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Refreshing state... [id=sgrule-2475647096]
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Refreshing state... [id=sgrule-758122500]
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Refreshing state... [id=sgrule-1234254799]
module.eks.aws_security_group_rule.node["egress_all"]: Refreshing state... [id=sgrule-2195677435]
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Refreshing state... [id=sgrule-2488107946]
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Refreshing state... [id=sgrule-3796001025]
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Refreshing state... [id=sgrule-2209449408]
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Refreshing state... [id=sgrule-4080432836]
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Refreshing state... [id=sgrule-669918767]
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Refreshing state... [id=sgrule-1523386350]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Refreshing state... [id=sgrule-3087015135]
module.vpc.aws_nat_gateway.this[0]: Refreshing state... [id=nat-0d2646ab2743b33f1]
module.eks.module.kms.aws_kms_alias.this["cluster"]: Refreshing state... [id=alias/eks/my-eks-cluster]
module.eks.aws_iam_policy.cluster_encryption[0]: Refreshing state... [id=arn:aws:iam::524196012679:policy/my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d]
module.vpc.aws_route.private_nat_gateway[0]: Refreshing state... [id=r-rtb-0677551884ad300111080289494]
module.eks.aws_eks_cluster.this[0]: Refreshing state... [id=my-eks-cluster]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Refreshing state... [id=my-eks-cluster-cluster-20250711130645656100000002-2025071113070454220000000e]
module.eks.time_sleep.this[0]: Refreshing state... [id=2025-07-11T13:16:21Z]
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Refreshing state... [id=arn:aws:iam::524196012679:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B]
module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0]: Refreshing state... [id=lt-02e467a42b680b99e]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Refreshing state... [id=my-eks-cluster:default-20250711131627437600000011]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # module.eks.aws_cloudwatch_log_group.this[0] will be destroyed
  - resource "aws_cloudwatch_log_group" "this" {
      - arn               = "arn:aws:logs:eu-west-1:524196012679:log-group:/aws/eks/my-eks-cluster/cluster" -> null
      - id                = "/aws/eks/my-eks-cluster/cluster" -> null
      - log_group_class   = "STANDARD" -> null
      - name              = "/aws/eks/my-eks-cluster/cluster" -> null
      - retention_in_days = 90 -> null
      - skip_destroy      = false -> null
      - tags              = {
          - "Name" = "/aws/eks/my-eks-cluster/cluster"
        } -> null
      - tags_all          = {
          - "Name" = "/aws/eks/my-eks-cluster/cluster"
        } -> null
    }

  # module.eks.aws_eks_cluster.this[0] will be destroyed
  - resource "aws_eks_cluster" "this" {
      - arn                           = "arn:aws:eks:eu-west-1:524196012679:cluster/my-eks-cluster" -> null
      - bootstrap_self_managed_addons = true -> null
      - certificate_authority         = [
          - {
              - data = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTGk1YTQzMzdiMnN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBM01URXhNekEyTWpGYUZ3MHpOVEEzTURreE16RXhNakZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNWczhwSWMzMzZCZkVSYm5LVnFuNHFrSWk3RHp6UEl6Vm9xODlBV09adzVZUE9pTGJHaW1QSmRyVFcKeDNkQUo5bXNhdy9FTndiQ3k2OTEyaUZVK09WaTAwQ0JRdEJnOUN6NXgzN2QxeStOVzg4NzVBbk9Ody8rSG1ncQpnUi9vdWN6TFhXUFhUMWNGS0pCaUU5N0tVRmhhOGxTZnZTV09QZysrc2h1dXJPUXRJNEU1c3JqM1BOTmUyMDYzClZIMjBYaUl3RkxIQllWZUYwc3RpNHgwWm40TmdWNXF3TmptS2t1N2wwcjB0KzZ0VHhkV0w3TmFRenRCSk9hTFkKcWJpbkVYTTB1eG1jTHc5SWVHeHJjeExqWS8zMHRPaGxYRUNEWitiMEQ5Qm15TEh2ZWxCNjA2VG0vb0dmcmQyNApCdFZLd0wySXhYZUd3TFI3cHhXWmJlMVNydGI1QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJScWNlRWVxNjNUT285NjROZkZlNHVrejY1RDlEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmJGVzNEdEVrdAppOC82NkdmK3lxZ0VQR3dWeEhhbUVrNm5SSVdrVmlGK3dWdkZHTU9ZVkViejJLVHYyZ3JYdjFsZ0Z3K3Y0d0svCmhqd2tOUHdmMzlVRTYzdVNZR2xiNjZFbWtnZlhrbHpaVENrZXJWVS9lYnJMSnd1b3VCbU1WNzk4ek9ka1NLSjQKNnJxdE01eXo0bis5NlMrRFVtYVN1Q1N0ZmVGRGRqL2x4ZTcvc2VFWHcyZ0QwZlhvNHNZWW00Z0xnM3dJbjRoUApkdHMyNnVLZGxnWTVTMGloNGM3TUErQ2tJYjlBdGhvTU53OE1rS1RlOEhBODBnY2NZK3poMTVSdmF1WlBaVkFlCm5vTHJrd0RvRVpIZDMweFJUd1NzRmxZSWhQY3dSanJYaGVWNXc3aE5SbjFTWVhLT1kyM2ZLV0ZzdmtzRDk5ODEKK3pNTW9LQnRsbE9iCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            },
        ] -> null
      - created_at                    = "2025-07-11T13:07:08Z" -> null
      - enabled_cluster_log_types     = [
          - "api",
          - "audit",
          - "authenticator",
        ] -> null
      - endpoint                      = "https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com" -> null
      - id                            = "my-eks-cluster" -> null
      - identity                      = [
          - {
              - oidc = [
                  - {
                      - issuer = "https://oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B"
                    },
                ]
            },
        ] -> null
      - name                          = "my-eks-cluster" -> null
      - platform_version              = "eks.46" -> null
      - role_arn                      = "arn:aws:iam::524196012679:role/my-eks-cluster-cluster-20250711130645656100000002" -> null
      - status                        = "ACTIVE" -> null
      - tags                          = {} -> null
      - tags_all                      = {} -> null
      - version                       = "1.28" -> null

      - access_config {
          - authentication_mode                         = "CONFIG_MAP" -> null
          - bootstrap_cluster_creator_admin_permissions = true -> null
        }

      - encryption_config {
          - resources = [
              - "secrets",
            ] -> null

          - provider {
              - key_arn = "arn:aws:kms:eu-west-1:524196012679:key/5da33b1b-e456-4211-b0d3-24c1e8bc17a0" -> null
            }
        }

      - kubernetes_network_config {
          - ip_family         = "ipv4" -> null
          - service_ipv4_cidr = "172.20.0.0/16" -> null

          - elastic_load_balancing {
              - enabled = false -> null
            }
        }

      - timeouts {}

      - upgrade_policy {
          - support_type = "EXTENDED" -> null
        }

      - vpc_config {
          - cluster_security_group_id = "sg-032adfad7e43af606" -> null
          - endpoint_private_access   = true -> null
          - endpoint_public_access    = true -> null
          - public_access_cidrs       = [
              - "0.0.0.0/0",
            ] -> null
          - security_group_ids        = [
              - "sg-02610bfd2bc4cbc28",
            ] -> null
          - subnet_ids                = [
              - "subnet-0207b1e7a4735fe2a",
              - "subnet-066b431a490aa085e",
              - "subnet-0dba9b337154d97b6",
            ] -> null
          - vpc_id                    = "vpc-0128e8b6ea6dcd28f" -> null
        }
    }

  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0] will be destroyed
  - resource "aws_iam_openid_connect_provider" "oidc_provider" {
      - arn             = "arn:aws:iam::524196012679:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B" -> null
      - client_id_list  = [
          - "sts.amazonaws.com",
        ] -> null
      - id              = "arn:aws:iam::524196012679:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B" -> null
      - tags            = {
          - "Name" = "my-eks-cluster-eks-irsa"
        } -> null
      - tags_all        = {
          - "Name" = "my-eks-cluster-eks-irsa"
        } -> null
      - thumbprint_list = [
          - "06b25927c42a721631c1efd9431e648fa62e1e39",
        ] -> null
      - url             = "oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B" -> null
    }

  # module.eks.aws_iam_policy.cluster_encryption[0] will be destroyed
  - resource "aws_iam_policy" "cluster_encryption" {
      - arn              = "arn:aws:iam::524196012679:policy/my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d" -> null
      - attachment_count = 1 -> null
      - description      = "Cluster encryption policy to allow cluster role to utilize CMK provided" -> null
      - id               = "arn:aws:iam::524196012679:policy/my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d" -> null
      - name             = "my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d" -> null
      - name_prefix      = "my-eks-cluster-cluster-ClusterEncryption" -> null
      - path             = "/" -> null
      - policy           = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = [
                          - "kms:Encrypt",
                          - "kms:Decrypt",
                          - "kms:ListGrants",
                          - "kms:DescribeKey",
                        ]
                      - Effect   = "Allow"
                      - Resource = "arn:aws:kms:eu-west-1:524196012679:key/5da33b1b-e456-4211-b0d3-24c1e8bc17a0"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - policy_id        = "ANPAXUDEEMKDUDJWMSNLB" -> null
      - tags             = {} -> null
      - tags_all         = {} -> null
    }

  # module.eks.aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::524196012679:role/my-eks-cluster-cluster-20250711130645656100000002" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "eks.amazonaws.com"
                        }
                      - Sid       = "EKSClusterAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2025-07-11T13:06:46Z" -> null
      - force_detach_policies = true -> null
      - id                    = "my-eks-cluster-cluster-20250711130645656100000002" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::524196012679:policy/my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d",
          - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          - "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "my-eks-cluster-cluster-20250711130645656100000002" -> null
      - name_prefix           = "my-eks-cluster-cluster-" -> null
      - path                  = "/" -> null
      - tags                  = {} -> null
      - tags_all              = {} -> null
      - unique_id             = "AROAXUDEEMKDVITI6J4YB" -> null

      - inline_policy {
          - name   = "my-eks-cluster-cluster" -> null
          - policy = jsonencode(
                {
                  - Statement = [
                      - {
                          - Action   = [
                              - "logs:CreateLogGroup",
                            ]
                          - Effect   = "Deny"
                          - Resource = "*"
                        },
                    ]
                  - Version   = "2012-10-17"
                }
            ) -> null
        }
    }

  # module.eks.aws_iam_role_policy_attachment.cluster_encryption[0] will be destroyed
  - resource "aws_iam_role_policy_attachment" "cluster_encryption" {
      - id         = "my-eks-cluster-cluster-20250711130645656100000002-2025071113070454220000000e" -> null
      - policy_arn = "arn:aws:iam::524196012679:policy/my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d" -> null
      - role       = "my-eks-cluster-cluster-20250711130645656100000002" -> null
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "my-eks-cluster-cluster-20250711130645656100000002-20250711130647226400000007" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy" -> null
      - role       = "my-eks-cluster-cluster-20250711130645656100000002" -> null
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "my-eks-cluster-cluster-20250711130645656100000002-20250711130647224100000006" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController" -> null
      - role       = "my-eks-cluster-cluster-20250711130645656100000002" -> null
    }

  # module.eks.aws_security_group.cluster[0] will be destroyed
  - resource "aws_security_group" "cluster" {
      - arn                    = "arn:aws:ec2:eu-west-1:524196012679:security-group/sg-02610bfd2bc4cbc28" -> null
      - description            = "EKS cluster security group" -> null
      - egress                 = [] -> null
      - id                     = "sg-02610bfd2bc4cbc28" -> null
      - ingress                = [
          - {
              - cidr_blocks      = []
              - description      = "Node groups to cluster API"
              - from_port        = 443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-0b608979243210b4d",
                ]
              - self             = false
              - to_port          = 443
            },
        ] -> null
      - name                   = "my-eks-cluster-cluster-2025071113065859720000000b" -> null
      - name_prefix            = "my-eks-cluster-cluster-" -> null
      - owner_id               = "524196012679" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "my-eks-cluster-cluster"
        } -> null
      - tags_all               = {
          - "Name" = "my-eks-cluster-cluster"
        } -> null
      - vpc_id                 = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.eks.aws_security_group.node[0] will be destroyed
  - resource "aws_security_group" "node" {
      - arn                    = "arn:aws:ec2:eu-west-1:524196012679:security-group/sg-0b608979243210b4d" -> null
      - description            = "EKS node shared security group" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = "Allow all egress"
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
            },
        ] -> null
      - id                     = "sg-0b608979243210b4d" -> null
      - ingress                = [
          - {
              - cidr_blocks      = []
              - description      = ""
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = [
                  - "sg-06d1bed771f912193",
                ]
              - self             = false
              - to_port          = 0
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 4443/tcp webhook"
              - from_port        = 4443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-02610bfd2bc4cbc28",
                ]
              - self             = false
              - to_port          = 4443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 6443/tcp webhook"
              - from_port        = 6443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-02610bfd2bc4cbc28",
                ]
              - self             = false
              - to_port          = 6443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 8443/tcp webhook"
              - from_port        = 8443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-02610bfd2bc4cbc28",
                ]
              - self             = false
              - to_port          = 8443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 9443/tcp webhook"
              - from_port        = 9443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-02610bfd2bc4cbc28",
                ]
              - self             = false
              - to_port          = 9443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node groups"
              - from_port        = 443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-02610bfd2bc4cbc28",
                ]
              - self             = false
              - to_port          = 443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node kubelets"
              - from_port        = 10250
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-02610bfd2bc4cbc28",
                ]
              - self             = false
              - to_port          = 10250
            },
          - {
              - cidr_blocks      = []
              - description      = "Node to node CoreDNS UDP"
              - from_port        = 53
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "udp"
              - security_groups  = []
              - self             = true
              - to_port          = 53
            },
          - {
              - cidr_blocks      = []
              - description      = "Node to node CoreDNS"
              - from_port        = 53
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = true
              - to_port          = 53
            },
          - {
              - cidr_blocks      = []
              - description      = "Node to node ingress on ephemeral ports"
              - from_port        = 1025
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = true
              - to_port          = 65535
            },
        ] -> null
      - name                   = "my-eks-cluster-node-2025071113065839750000000a" -> null
      - name_prefix            = "my-eks-cluster-node-" -> null
      - owner_id               = "524196012679" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name"                                 = "my-eks-cluster-node"
          - "kubernetes.io/cluster/my-eks-cluster" = "owned"
        } -> null
      - tags_all               = {
          - "Name"                                 = "my-eks-cluster-node"
          - "kubernetes.io/cluster/my-eks-cluster" = "owned"
        } -> null
      - vpc_id                 = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.eks.aws_security_group_rule.cluster["ingress_nodes_443"] will be destroyed
  - resource "aws_security_group_rule" "cluster" {
      - description              = "Node groups to cluster API" -> null
      - from_port                = 443 -> null
      - id                       = "sgrule-3087015135" -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-02610bfd2bc4cbc28" -> null
      - security_group_rule_id   = "sgr-090ddee65ae450b35" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-0b608979243210b4d" -> null
      - to_port                  = 443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["egress_all"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - cidr_blocks            = [
          - "0.0.0.0/0",
        ] -> null
      - description            = "Allow all egress" -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-2195677435" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-0b608979243210b4d" -> null
      - security_group_rule_id = "sgr-0cd05422675541ad1" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "egress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_443"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node groups" -> null
      - from_port                = 443 -> null
      - id                       = "sgrule-4080432836" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-0b608979243210b4d" -> null
      - security_group_rule_id   = "sgr-0a5f3a0306322108a" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-02610bfd2bc4cbc28" -> null
      - to_port                  = 443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 4443/tcp webhook" -> null
      - from_port                = 4443 -> null
      - id                       = "sgrule-2475647096" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-0b608979243210b4d" -> null
      - security_group_rule_id   = "sgr-08922143664d417e3" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-02610bfd2bc4cbc28" -> null
      - to_port                  = 4443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 6443/tcp webhook" -> null
      - from_port                = 6443 -> null
      - id                       = "sgrule-1523386350" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-0b608979243210b4d" -> null
      - security_group_rule_id   = "sgr-0db04fd09561383dc" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-02610bfd2bc4cbc28" -> null
      - to_port                  = 6443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 8443/tcp webhook" -> null
      - from_port                = 8443 -> null
      - id                       = "sgrule-1234254799" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-0b608979243210b4d" -> null
      - security_group_rule_id   = "sgr-0f4728b161b69881b" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-02610bfd2bc4cbc28" -> null
      - to_port                  = 8443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 9443/tcp webhook" -> null
      - from_port                = 9443 -> null
      - id                       = "sgrule-758122500" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-0b608979243210b4d" -> null
      - security_group_rule_id   = "sgr-02416b7c48fa2cdfd" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-02610bfd2bc4cbc28" -> null
      - to_port                  = 9443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node kubelets" -> null
      - from_port                = 10250 -> null
      - id                       = "sgrule-2488107946" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-0b608979243210b4d" -> null
      - security_group_rule_id   = "sgr-08f50f90bcfb740e7" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-02610bfd2bc4cbc28" -> null
      - to_port                  = 10250 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description            = "Node to node ingress on ephemeral ports" -> null
      - from_port              = 1025 -> null
      - id                     = "sgrule-3796001025" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "tcp" -> null
      - security_group_id      = "sg-0b608979243210b4d" -> null
      - security_group_rule_id = "sgr-013161fe5ce7d4c24" -> null
      - self                   = true -> null
      - to_port                = 65535 -> null
      - type                   = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description            = "Node to node CoreDNS" -> null
      - from_port              = 53 -> null
      - id                     = "sgrule-669918767" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "tcp" -> null
      - security_group_id      = "sg-0b608979243210b4d" -> null
      - security_group_rule_id = "sgr-0132c6a6c3b65d5e5" -> null
      - self                   = true -> null
      - to_port                = 53 -> null
      - type                   = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description            = "Node to node CoreDNS UDP" -> null
      - from_port              = 53 -> null
      - id                     = "sgrule-2209449408" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "udp" -> null
      - security_group_id      = "sg-0b608979243210b4d" -> null
      - security_group_rule_id = "sgr-0ba464a68c5c063fe" -> null
      - self                   = true -> null
      - to_port                = 53 -> null
      - type                   = "ingress" -> null
    }

  # module.eks.time_sleep.this[0] will be destroyed
  - resource "time_sleep" "this" {
      - create_duration = "30s" -> null
      - id              = "2025-07-11T13:16:21Z" -> null
      - triggers        = {
          - "cluster_certificate_authority_data" = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTGk1YTQzMzdiMnN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBM01URXhNekEyTWpGYUZ3MHpOVEEzTURreE16RXhNakZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNWczhwSWMzMzZCZkVSYm5LVnFuNHFrSWk3RHp6UEl6Vm9xODlBV09adzVZUE9pTGJHaW1QSmRyVFcKeDNkQUo5bXNhdy9FTndiQ3k2OTEyaUZVK09WaTAwQ0JRdEJnOUN6NXgzN2QxeStOVzg4NzVBbk9Ody8rSG1ncQpnUi9vdWN6TFhXUFhUMWNGS0pCaUU5N0tVRmhhOGxTZnZTV09QZysrc2h1dXJPUXRJNEU1c3JqM1BOTmUyMDYzClZIMjBYaUl3RkxIQllWZUYwc3RpNHgwWm40TmdWNXF3TmptS2t1N2wwcjB0KzZ0VHhkV0w3TmFRenRCSk9hTFkKcWJpbkVYTTB1eG1jTHc5SWVHeHJjeExqWS8zMHRPaGxYRUNEWitiMEQ5Qm15TEh2ZWxCNjA2VG0vb0dmcmQyNApCdFZLd0wySXhYZUd3TFI3cHhXWmJlMVNydGI1QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJScWNlRWVxNjNUT285NjROZkZlNHVrejY1RDlEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmJGVzNEdEVrdAppOC82NkdmK3lxZ0VQR3dWeEhhbUVrNm5SSVdrVmlGK3dWdkZHTU9ZVkViejJLVHYyZ3JYdjFsZ0Z3K3Y0d0svCmhqd2tOUHdmMzlVRTYzdVNZR2xiNjZFbWtnZlhrbHpaVENrZXJWVS9lYnJMSnd1b3VCbU1WNzk4ek9ka1NLSjQKNnJxdE01eXo0bis5NlMrRFVtYVN1Q1N0ZmVGRGRqL2x4ZTcvc2VFWHcyZ0QwZlhvNHNZWW00Z0xnM3dJbjRoUApkdHMyNnVLZGxnWTVTMGloNGM3TUErQ2tJYjlBdGhvTU53OE1rS1RlOEhBODBnY2NZK3poMTVSdmF1WlBaVkFlCm5vTHJrd0RvRVpIZDMweFJUd1NzRmxZSWhQY3dSanJYaGVWNXc3aE5SbjFTWVhLT1kyM2ZLV0ZzdmtzRDk5ODEKK3pNTW9LQnRsbE9iCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
          - "cluster_endpoint"                   = "https://7C36DD3DC5FAC52890F16785DD3ADC2B.gr7.eu-west-1.eks.amazonaws.com"
          - "cluster_name"                       = "my-eks-cluster"
          - "cluster_version"                    = "1.28"
        } -> null
    }

  # module.vpc.aws_default_network_acl.this[0] will be destroyed
  - resource "aws_default_network_acl" "this" {
      - arn                    = "arn:aws:ec2:eu-west-1:524196012679:network-acl/acl-0083f100376807a32" -> null
      - default_network_acl_id = "acl-0083f100376807a32" -> null
      - id                     = "acl-0083f100376807a32" -> null
      - owner_id               = "524196012679" -> null
      - subnet_ids             = [
          - "subnet-0207b1e7a4735fe2a",
          - "subnet-051124211e090a831",
          - "subnet-05db99b49047b0ffd",
          - "subnet-066b431a490aa085e",
          - "subnet-0dba9b337154d97b6",
          - "subnet-0fa0d4ef8276b2f92",
        ] -> null
      - tags                   = {
          - "Name" = "eks-vpc-default"
        } -> null
      - tags_all               = {
          - "Name" = "eks-vpc-default"
        } -> null
      - vpc_id                 = "vpc-0128e8b6ea6dcd28f" -> null

      - egress {
          - action          = "allow" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - ipv6_cidr_block = "::/0" -> null
          - protocol        = "-1" -> null
          - rule_no         = 101 -> null
          - to_port         = 0 -> null
        }
      - egress {
          - action     = "allow" -> null
          - cidr_block = "0.0.0.0/0" -> null
          - from_port  = 0 -> null
          - icmp_code  = 0 -> null
          - icmp_type  = 0 -> null
          - protocol   = "-1" -> null
          - rule_no    = 100 -> null
          - to_port    = 0 -> null
        }

      - ingress {
          - action          = "allow" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - ipv6_cidr_block = "::/0" -> null
          - protocol        = "-1" -> null
          - rule_no         = 101 -> null
          - to_port         = 0 -> null
        }
      - ingress {
          - action     = "allow" -> null
          - cidr_block = "0.0.0.0/0" -> null
          - from_port  = 0 -> null
          - icmp_code  = 0 -> null
          - icmp_type  = 0 -> null
          - protocol   = "-1" -> null
          - rule_no    = 100 -> null
          - to_port    = 0 -> null
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be destroyed
  - resource "aws_default_route_table" "default" {
      - arn                    = "arn:aws:ec2:eu-west-1:524196012679:route-table/rtb-04c9ea0e474180df6" -> null
      - default_route_table_id = "rtb-04c9ea0e474180df6" -> null
      - id                     = "rtb-04c9ea0e474180df6" -> null
      - owner_id               = "524196012679" -> null
      - propagating_vgws       = [] -> null
      - route                  = [] -> null
      - tags                   = {
          - "Name" = "eks-vpc-default"
        } -> null
      - tags_all               = {
          - "Name" = "eks-vpc-default"
        } -> null
      - vpc_id                 = "vpc-0128e8b6ea6dcd28f" -> null

      - timeouts {
          - create = "5m" -> null
          - update = "5m" -> null
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be destroyed
  - resource "aws_default_security_group" "this" {
      - arn                    = "arn:aws:ec2:eu-west-1:524196012679:security-group/sg-0966fe53f93135764" -> null
      - description            = "default VPC security group" -> null
      - egress                 = [] -> null
      - id                     = "sg-0966fe53f93135764" -> null
      - ingress                = [] -> null
      - name                   = "default" -> null
      - owner_id               = "524196012679" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "eks-vpc-default"
        } -> null
      - tags_all               = {
          - "Name" = "eks-vpc-default"
        } -> null
      - vpc_id                 = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_eip.nat[0] will be destroyed
  - resource "aws_eip" "nat" {
      - allocation_id        = "eipalloc-024bd17f1a66e7e7c" -> null
      - arn                  = "arn:aws:ec2:eu-west-1:524196012679:elastic-ip/eipalloc-024bd17f1a66e7e7c" -> null
      - association_id       = "eipassoc-08c443d8f27b9b22f" -> null
      - domain               = "vpc" -> null
      - id                   = "eipalloc-024bd17f1a66e7e7c" -> null
      - network_border_group = "eu-west-1" -> null
      - network_interface    = "eni-0d716840aeff58213" -> null
      - private_dns          = "ip-10-0-101-188.eu-west-1.compute.internal" -> null
      - private_ip           = "10.0.101.188" -> null
      - public_dns           = "ec2-34-249-115-238.eu-west-1.compute.amazonaws.com" -> null
      - public_ip            = "34.249.115.238" -> null
      - public_ipv4_pool     = "amazon" -> null
      - tags                 = {
          - "Name" = "eks-vpc-eu-west-1a"
        } -> null
      - tags_all             = {
          - "Name" = "eks-vpc-eu-west-1a"
        } -> null
      - vpc                  = true -> null
    }

  # module.vpc.aws_internet_gateway.this[0] will be destroyed
  - resource "aws_internet_gateway" "this" {
      - arn      = "arn:aws:ec2:eu-west-1:524196012679:internet-gateway/igw-0d7755a3024b86d18" -> null
      - id       = "igw-0d7755a3024b86d18" -> null
      - owner_id = "524196012679" -> null
      - tags     = {
          - "Name" = "eks-vpc"
        } -> null
      - tags_all = {
          - "Name" = "eks-vpc"
        } -> null
      - vpc_id   = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_nat_gateway.this[0] will be destroyed
  - resource "aws_nat_gateway" "this" {
      - allocation_id                      = "eipalloc-024bd17f1a66e7e7c" -> null
      - association_id                     = "eipassoc-08c443d8f27b9b22f" -> null
      - connectivity_type                  = "public" -> null
      - id                                 = "nat-0d2646ab2743b33f1" -> null
      - network_interface_id               = "eni-0d716840aeff58213" -> null
      - private_ip                         = "10.0.101.188" -> null
      - public_ip                          = "34.249.115.238" -> null
      - secondary_allocation_ids           = [] -> null
      - secondary_private_ip_address_count = 0 -> null
      - secondary_private_ip_addresses     = [] -> null
      - subnet_id                          = "subnet-0fa0d4ef8276b2f92" -> null
      - tags                               = {
          - "Name" = "eks-vpc-eu-west-1a"
        } -> null
      - tags_all                           = {
          - "Name" = "eks-vpc-eu-west-1a"
        } -> null
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be destroyed
  - resource "aws_route" "private_nat_gateway" {
      - destination_cidr_block = "0.0.0.0/0" -> null
      - id                     = "r-rtb-0677551884ad300111080289494" -> null
      - nat_gateway_id         = "nat-0d2646ab2743b33f1" -> null
      - origin                 = "CreateRoute" -> null
      - route_table_id         = "rtb-0677551884ad30011" -> null
      - state                  = "active" -> null

      - timeouts {
          - create = "5m" -> null
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be destroyed
  - resource "aws_route" "public_internet_gateway" {
      - destination_cidr_block = "0.0.0.0/0" -> null
      - gateway_id             = "igw-0d7755a3024b86d18" -> null
      - id                     = "r-rtb-0667b256a67d6b4611080289494" -> null
      - origin                 = "CreateRoute" -> null
      - route_table_id         = "rtb-0667b256a67d6b461" -> null
      - state                  = "active" -> null

      - timeouts {
          - create = "5m" -> null
        }
    }

  # module.vpc.aws_route_table.private[0] will be destroyed
  - resource "aws_route_table" "private" {
      - arn              = "arn:aws:ec2:eu-west-1:524196012679:route-table/rtb-0677551884ad30011" -> null
      - id               = "rtb-0677551884ad30011" -> null
      - owner_id         = "524196012679" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - carrier_gateway_id         = ""
              - cidr_block                 = "0.0.0.0/0"
              - core_network_arn           = ""
              - destination_prefix_list_id = ""
              - egress_only_gateway_id     = ""
              - gateway_id                 = ""
              - ipv6_cidr_block            = ""
              - local_gateway_id           = ""
              - nat_gateway_id             = "nat-0d2646ab2743b33f1"
              - network_interface_id       = ""
              - transit_gateway_id         = ""
              - vpc_endpoint_id            = ""
              - vpc_peering_connection_id  = ""
            },
        ] -> null
      - tags             = {
          - "Name" = "eks-vpc-private"
        } -> null
      - tags_all         = {
          - "Name" = "eks-vpc-private"
        } -> null
      - vpc_id           = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_route_table.public[0] will be destroyed
  - resource "aws_route_table" "public" {
      - arn              = "arn:aws:ec2:eu-west-1:524196012679:route-table/rtb-0667b256a67d6b461" -> null
      - id               = "rtb-0667b256a67d6b461" -> null
      - owner_id         = "524196012679" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - carrier_gateway_id         = ""
              - cidr_block                 = "0.0.0.0/0"
              - core_network_arn           = ""
              - destination_prefix_list_id = ""
              - egress_only_gateway_id     = ""
              - gateway_id                 = "igw-0d7755a3024b86d18"
              - ipv6_cidr_block            = ""
              - local_gateway_id           = ""
              - nat_gateway_id             = ""
              - network_interface_id       = ""
              - transit_gateway_id         = ""
              - vpc_endpoint_id            = ""
              - vpc_peering_connection_id  = ""
            },
        ] -> null
      - tags             = {
          - "Name" = "eks-vpc-public"
        } -> null
      - tags_all         = {
          - "Name" = "eks-vpc-public"
        } -> null
      - vpc_id           = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_route_table_association.private[0] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-0450d94b618bc5e13" -> null
      - route_table_id = "rtb-0677551884ad30011" -> null
      - subnet_id      = "subnet-0dba9b337154d97b6" -> null
    }

  # module.vpc.aws_route_table_association.private[1] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-087f19071fea5c386" -> null
      - route_table_id = "rtb-0677551884ad30011" -> null
      - subnet_id      = "subnet-0207b1e7a4735fe2a" -> null
    }

  # module.vpc.aws_route_table_association.private[2] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-00bbc6211cfe9b097" -> null
      - route_table_id = "rtb-0677551884ad30011" -> null
      - subnet_id      = "subnet-066b431a490aa085e" -> null
    }

  # module.vpc.aws_route_table_association.public[0] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-079b06a483a95ee5c" -> null
      - route_table_id = "rtb-0667b256a67d6b461" -> null
      - subnet_id      = "subnet-0fa0d4ef8276b2f92" -> null
    }

  # module.vpc.aws_route_table_association.public[1] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-05abb27d28ff2ec20" -> null
      - route_table_id = "rtb-0667b256a67d6b461" -> null
      - subnet_id      = "subnet-05db99b49047b0ffd" -> null
    }

  # module.vpc.aws_route_table_association.public[2] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-071d85dbc8e36a5ac" -> null
      - route_table_id = "rtb-0667b256a67d6b461" -> null
      - subnet_id      = "subnet-051124211e090a831" -> null
    }

  # module.vpc.aws_subnet.private[0] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:eu-west-1:524196012679:subnet/subnet-0dba9b337154d97b6" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "eu-west-1a" -> null
      - availability_zone_id                           = "euw1-az1" -> null
      - cidr_block                                     = "10.0.1.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0dba9b337154d97b6" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "524196012679" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "eks-vpc-private-eu-west-1a"
        } -> null
      - tags_all                                       = {
          - "Name" = "eks-vpc-private-eu-west-1a"
        } -> null
      - vpc_id                                         = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_subnet.private[1] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:eu-west-1:524196012679:subnet/subnet-0207b1e7a4735fe2a" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "eu-west-1b" -> null
      - availability_zone_id                           = "euw1-az2" -> null
      - cidr_block                                     = "10.0.2.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0207b1e7a4735fe2a" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "524196012679" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "eks-vpc-private-eu-west-1b"
        } -> null
      - tags_all                                       = {
          - "Name" = "eks-vpc-private-eu-west-1b"
        } -> null
      - vpc_id                                         = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_subnet.private[2] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:eu-west-1:524196012679:subnet/subnet-066b431a490aa085e" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "eu-west-1c" -> null
      - availability_zone_id                           = "euw1-az3" -> null
      - cidr_block                                     = "10.0.3.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-066b431a490aa085e" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "524196012679" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "eks-vpc-private-eu-west-1c"
        } -> null
      - tags_all                                       = {
          - "Name" = "eks-vpc-private-eu-west-1c"
        } -> null
      - vpc_id                                         = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_subnet.public[0] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:eu-west-1:524196012679:subnet/subnet-0fa0d4ef8276b2f92" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "eu-west-1a" -> null
      - availability_zone_id                           = "euw1-az1" -> null
      - cidr_block                                     = "10.0.101.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0fa0d4ef8276b2f92" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "524196012679" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "eks-vpc-public-eu-west-1a"
        } -> null
      - tags_all                                       = {
          - "Name" = "eks-vpc-public-eu-west-1a"
        } -> null
      - vpc_id                                         = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_subnet.public[1] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:eu-west-1:524196012679:subnet/subnet-05db99b49047b0ffd" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "eu-west-1b" -> null
      - availability_zone_id                           = "euw1-az2" -> null
      - cidr_block                                     = "10.0.102.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-05db99b49047b0ffd" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "524196012679" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "eks-vpc-public-eu-west-1b"
        } -> null
      - tags_all                                       = {
          - "Name" = "eks-vpc-public-eu-west-1b"
        } -> null
      - vpc_id                                         = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_subnet.public[2] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:eu-west-1:524196012679:subnet/subnet-051124211e090a831" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "eu-west-1c" -> null
      - availability_zone_id                           = "euw1-az3" -> null
      - cidr_block                                     = "10.0.103.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-051124211e090a831" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "524196012679" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "eks-vpc-public-eu-west-1c"
        } -> null
      - tags_all                                       = {
          - "Name" = "eks-vpc-public-eu-west-1c"
        } -> null
      - vpc_id                                         = "vpc-0128e8b6ea6dcd28f" -> null
    }

  # module.vpc.aws_vpc.this[0] will be destroyed
  - resource "aws_vpc" "this" {
      - arn                                  = "arn:aws:ec2:eu-west-1:524196012679:vpc/vpc-0128e8b6ea6dcd28f" -> null
      - assign_generated_ipv6_cidr_block     = false -> null
      - cidr_block                           = "10.0.0.0/16" -> null
      - default_network_acl_id               = "acl-0083f100376807a32" -> null
      - default_route_table_id               = "rtb-04c9ea0e474180df6" -> null
      - default_security_group_id            = "sg-0966fe53f93135764" -> null
      - dhcp_options_id                      = "dopt-08f38d75746ad9b93" -> null
      - enable_dns_hostnames                 = true -> null
      - enable_dns_support                   = true -> null
      - enable_network_address_usage_metrics = false -> null
      - id                                   = "vpc-0128e8b6ea6dcd28f" -> null
      - instance_tenancy                     = "default" -> null
      - ipv6_netmask_length                  = 0 -> null
      - main_route_table_id                  = "rtb-04c9ea0e474180df6" -> null
      - owner_id                             = "524196012679" -> null
      - tags                                 = {
          - "Name" = "eks-vpc"
        } -> null
      - tags_all                             = {
          - "Name" = "eks-vpc"
        } -> null
    }

  # module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0] will be destroyed
  - resource "aws_eks_node_group" "this" {
      - ami_type               = "AL2_x86_64" -> null
      - arn                    = "arn:aws:eks:eu-west-1:524196012679:nodegroup/my-eks-cluster/default-20250711131627437600000011/fccbfcd0-a735-fcc4-eda6-781a02c40802" -> null
      - capacity_type          = "ON_DEMAND" -> null
      - cluster_name           = "my-eks-cluster" -> null
      - disk_size              = 0 -> null
      - id                     = "my-eks-cluster:default-20250711131627437600000011" -> null
      - instance_types         = [
          - "t3.medium",
        ] -> null
      - labels                 = {} -> null
      - node_group_name        = "default-20250711131627437600000011" -> null
      - node_group_name_prefix = "default-" -> null
      - node_role_arn          = "arn:aws:iam::524196012679:role/default-eks-node-group-20250711130645655300000001" -> null
      - release_version        = "1.28.15-20250627" -> null
      - resources              = [
          - {
              - autoscaling_groups              = [
                  - {
                      - name = "eks-default-20250711131627437600000011-fccbfcd0-a735-fcc4-eda6-781a02c40802"
                    },
                ]
              - remote_access_security_group_id = ""
            },
        ] -> null
      - status                 = "ACTIVE" -> null
      - subnet_ids             = [
          - "subnet-0207b1e7a4735fe2a",
          - "subnet-066b431a490aa085e",
          - "subnet-0dba9b337154d97b6",
        ] -> null
      - tags                   = {
          - "Name" = "default"
        } -> null
      - tags_all               = {
          - "Name" = "default"
        } -> null
      - version                = "1.28" -> null

      - launch_template {
          - id      = "lt-02e467a42b680b99e" -> null
          - name    = "default-2025071113162135900000000f" -> null
          - version = "1" -> null
        }

      - scaling_config {
          - desired_size = 2 -> null
          - max_size     = 3 -> null
          - min_size     = 1 -> null
        }

      - timeouts {}

      - update_config {
          - max_unavailable            = 0 -> null
          - max_unavailable_percentage = 33 -> null
        }
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::524196012679:role/default-eks-node-group-20250711130645655300000001" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ec2.amazonaws.com"
                        }
                      - Sid       = "EKSNodeAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2025-07-11T13:06:46Z" -> null
      - description           = "EKS managed node group IAM role" -> null
      - force_detach_policies = true -> null
      - id                    = "default-eks-node-group-20250711130645655300000001" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "default-eks-node-group-20250711130645655300000001" -> null
      - name_prefix           = "default-eks-node-group-" -> null
      - path                  = "/" -> null
      - tags                  = {} -> null
      - tags_all              = {} -> null
      - unique_id             = "AROAXUDEEMKD2CKI3R4AO" -> null
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "default-eks-node-group-20250711130645655300000001-20250711130646842100000003" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly" -> null
      - role       = "default-eks-node-group-20250711130645655300000001" -> null
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "default-eks-node-group-20250711130645655300000001-20250711130647044500000005" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy" -> null
      - role       = "default-eks-node-group-20250711130645655300000001" -> null
    }

  # module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "default-eks-node-group-20250711130645655300000001-20250711130646904200000004" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy" -> null
      - role       = "default-eks-node-group-20250711130645655300000001" -> null
    }

  # module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0] will be destroyed
  - resource "aws_launch_template" "this" {
      - arn                     = "arn:aws:ec2:eu-west-1:524196012679:launch-template/lt-02e467a42b680b99e" -> null
      - default_version         = 1 -> null
      - description             = "Custom launch template for default EKS managed node group" -> null
      - disable_api_stop        = false -> null
      - disable_api_termination = false -> null
      - id                      = "lt-02e467a42b680b99e" -> null
      - latest_version          = 1 -> null
      - name                    = "default-2025071113162135900000000f" -> null
      - name_prefix             = "default-" -> null
      - security_group_names    = [] -> null
      - tags                    = {} -> null
      - tags_all                = {} -> null
      - update_default_version  = true -> null
      - vpc_security_group_ids  = [
          - "sg-0b608979243210b4d",
        ] -> null

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
        }

      - monitoring {
          - enabled = true -> null
        }

      - tag_specifications {
          - resource_type = "instance" -> null
          - tags          = {
              - "Name" = "default"
            } -> null
        }
      - tag_specifications {
          - resource_type = "network-interface" -> null
          - tags          = {
              - "Name" = "default"
            } -> null
        }
      - tag_specifications {
          - resource_type = "volume" -> null
          - tags          = {
              - "Name" = "default"
            } -> null
        }
    }

  # module.eks.module.kms.aws_kms_alias.this["cluster"] will be destroyed
  - resource "aws_kms_alias" "this" {
      - arn            = "arn:aws:kms:eu-west-1:524196012679:alias/eks/my-eks-cluster" -> null
      - id             = "alias/eks/my-eks-cluster" -> null
      - name           = "alias/eks/my-eks-cluster" -> null
      - target_key_arn = "arn:aws:kms:eu-west-1:524196012679:key/5da33b1b-e456-4211-b0d3-24c1e8bc17a0" -> null
      - target_key_id  = "5da33b1b-e456-4211-b0d3-24c1e8bc17a0" -> null
    }

  # module.eks.module.kms.aws_kms_key.this[0] will be destroyed
  - resource "aws_kms_key" "this" {
      - arn                                = "arn:aws:kms:eu-west-1:524196012679:key/5da33b1b-e456-4211-b0d3-24c1e8bc17a0" -> null
      - bypass_policy_lockout_safety_check = false -> null
      - customer_master_key_spec           = "SYMMETRIC_DEFAULT" -> null
      - description                        = "my-eks-cluster cluster encryption key" -> null
      - enable_key_rotation                = true -> null
      - id                                 = "5da33b1b-e456-4211-b0d3-24c1e8bc17a0" -> null
      - is_enabled                         = true -> null
      - key_id                             = "5da33b1b-e456-4211-b0d3-24c1e8bc17a0" -> null
      - key_usage                          = "ENCRYPT_DECRYPT" -> null
      - multi_region                       = false -> null
      - policy                             = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = [
                          - "kms:Update*",
                          - "kms:UntagResource",
                          - "kms:TagResource",
                          - "kms:ScheduleKeyDeletion",
                          - "kms:Revoke*",
                          - "kms:ReplicateKey",
                          - "kms:Put*",
                          - "kms:List*",
                          - "kms:ImportKeyMaterial",
                          - "kms:Get*",
                          - "kms:Enable*",
                          - "kms:Disable*",
                          - "kms:Describe*",
                          - "kms:Delete*",
                          - "kms:Create*",
                          - "kms:CancelKeyDeletion",
                        ]
                      - Effect    = "Allow"
                      - Principal = {
                          - AWS = "arn:aws:iam::524196012679:user/admin"
                        }
                      - Resource  = "*"
                      - Sid       = "KeyAdministration"
                    },
                  - {
                      - Action    = [
                          - "kms:ReEncrypt*",
                          - "kms:GenerateDataKey*",
                          - "kms:Encrypt",
                          - "kms:DescribeKey",
                          - "kms:Decrypt",
                        ]
                      - Effect    = "Allow"
                      - Principal = {
                          - AWS = "arn:aws:iam::524196012679:role/my-eks-cluster-cluster-20250711130645656100000002"
                        }
                      - Resource  = "*"
                      - Sid       = "KeyUsage"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - rotation_period_in_days            = 365 -> null
      - tags                               = {} -> null
      - tags_all                           = {} -> null
    }

Plan: 0 to add, 0 to change, 53 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

module.vpc.aws_route_table_association.private[1]: Destroying... [id=rtbassoc-087f19071fea5c386]
module.vpc.aws_route_table_association.public[0]: Destroying... [id=rtbassoc-079b06a483a95ee5c]
module.eks.module.kms.aws_kms_alias.this["cluster"]: Destroying... [id=alias/eks/my-eks-cluster]
module.vpc.aws_route_table_association.public[2]: Destroying... [id=rtbassoc-071d85dbc8e36a5ac]
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Destroying... [id=arn:aws:iam::524196012679:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/7C36DD3DC5FAC52890F16785DD3ADC2B]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Destroying... [id=my-eks-cluster-cluster-20250711130645656100000002-2025071113070454220000000e]
module.vpc.aws_route_table_association.private[2]: Destroying... [id=rtbassoc-00bbc6211cfe9b097]
module.vpc.aws_default_security_group.this[0]: Destroying... [id=sg-0966fe53f93135764]
module.vpc.aws_default_security_group.this[0]: Destruction complete after 0s
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Destroying... [id=my-eks-cluster:default-20250711131627437600000011]
module.vpc.aws_default_network_acl.this[0]: Destroying... [id=acl-0083f100376807a32]
module.vpc.aws_default_network_acl.this[0]: Destruction complete after 0s
module.vpc.aws_route.private_nat_gateway[0]: Destroying... [id=r-rtb-0677551884ad300111080289494]
module.vpc.aws_route.public_internet_gateway[0]: Destroying... [id=r-rtb-0667b256a67d6b4611080289494]
module.eks.module.kms.aws_kms_alias.this["cluster"]: Destruction complete after 0s
module.vpc.aws_route_table_association.public[1]: Destroying... [id=rtbassoc-05abb27d28ff2ec20]
module.vpc.aws_route_table_association.private[2]: Destruction complete after 0s
module.vpc.aws_route_table_association.public[0]: Destruction complete after 0s
module.vpc.aws_route_table_association.public[2]: Destruction complete after 0s
module.vpc.aws_route_table_association.private[1]: Destruction complete after 0s
module.vpc.aws_route_table_association.private[0]: Destroying... [id=rtbassoc-0450d94b618bc5e13]
module.vpc.aws_default_route_table.default[0]: Destroying... [id=rtb-04c9ea0e474180df6]
module.vpc.aws_default_route_table.default[0]: Destruction complete after 0s
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Destruction complete after 0s
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Destruction complete after 0s
module.eks.aws_iam_policy.cluster_encryption[0]: Destroying... [id=arn:aws:iam::524196012679:policy/my-eks-cluster-cluster-ClusterEncryption2025071113070380390000000d]
module.vpc.aws_route_table_association.public[1]: Destruction complete after 0s
module.vpc.aws_route.public_internet_gateway[0]: Destruction complete after 0s
module.vpc.aws_route_table.public[0]: Destroying... [id=rtb-0667b256a67d6b461]
module.vpc.aws_route.private_nat_gateway[0]: Destruction complete after 0s
module.vpc.aws_nat_gateway.this[0]: Destroying... [id=nat-0d2646ab2743b33f1]
module.vpc.aws_route_table_association.private[0]: Destruction complete after 0s
module.vpc.aws_route_table.private[0]: Destroying... [id=rtb-0677551884ad30011]
module.eks.aws_iam_policy.cluster_encryption[0]: Destruction complete after 1s
module.vpc.aws_route_table.public[0]: Destruction complete after 1s
module.vpc.aws_route_table.private[0]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-0d2646ab2743b33f1, 10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-0d2646ab2743b33f1, 20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-0d2646ab2743b33f1, 30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-0d2646ab2743b33f1, 40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-0d2646ab2743b33f1, 50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Destruction complete after 51s
module.vpc.aws_subnet.public[0]: Destroying... [id=subnet-0fa0d4ef8276b2f92]
module.vpc.aws_eip.nat[0]: Destroying... [id=eipalloc-024bd17f1a66e7e7c]
module.vpc.aws_subnet.public[1]: Destroying... [id=subnet-05db99b49047b0ffd]
module.vpc.aws_subnet.public[2]: Destroying... [id=subnet-051124211e090a831]
module.vpc.aws_subnet.public[1]: Destruction complete after 0s
module.vpc.aws_eip.nat[0]: Destruction complete after 1s
module.vpc.aws_internet_gateway.this[0]: Destroying... [id=igw-0d7755a3024b86d18]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 1m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 1m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 1m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 1m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 1m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 1m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 1m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 1m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 1m0s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 2m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 1m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 1m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 1m10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 2m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 1m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 1m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 1m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 2m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 1m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 1m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 1m30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 2m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 1m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 1m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 1m40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 2m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 1m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 1m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 1m50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 2m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 2m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 2m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 2m0s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 3m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 2m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 2m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 2m10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 3m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 2m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 2m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 2m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 3m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 2m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 2m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 2m30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 3m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 2m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 2m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 2m40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 3m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 2m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 2m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 2m50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 3m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 3m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 3m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 3m0s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 4m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 3m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 3m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 3m10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 4m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 3m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 3m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 3m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 4m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 3m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 3m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 3m30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 4m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 3m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 3m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 3m40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 4m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 3m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 3m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 3m50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 4m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 4m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 4m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 4m0s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 5m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 4m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 4m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 4m10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 5m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 4m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 4m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 4m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 5m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 4m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 4m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 4m30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 5m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 4m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 4m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 4m40s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 5m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 4m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 4m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 4m50s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 5m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 5m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 5m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 5m0s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 6m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 5m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 5m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 5m10s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 6m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 5m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 5m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 5m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Still destroying... [id=my-eks-cluster:default-20250711131627437600000011, 6m20s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_eks_node_group.this[0]: Destruction complete after 6m20s
module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0]: Destroying... [id=lt-02e467a42b680b99e]
module.eks.module.eks_managed_node_group["default"].aws_launch_template.this[0]: Destruction complete after 0s
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Destroying... [id=default-eks-node-group-20250711130645655300000001-20250711130646904200000004]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Destroying... [id=default-eks-node-group-20250711130645655300000001-20250711130647044500000005]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Destroying... [id=default-eks-node-group-20250711130645655300000001-20250711130646842100000003]
module.eks.time_sleep.this[0]: Destroying... [id=2025-07-11T13:16:21Z]
module.eks.time_sleep.this[0]: Destruction complete after 0s
module.eks.aws_eks_cluster.this[0]: Destroying... [id=my-eks-cluster]
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["default"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0]: Destroying... [id=default-eks-node-group-20250711130645655300000001]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 5m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 5m30s elapsed]
module.eks.module.eks_managed_node_group["default"].aws_iam_role.this[0]: Destruction complete after 0s
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 5m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 5m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 5m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 5m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 5m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 5m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 5m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 6m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 6m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 6m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 6m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 6m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 6m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 6m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 6m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 6m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 1m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 6m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 6m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 6m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 1m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 6m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 6m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 6m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 1m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 6m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 6m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 6m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 1m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 7m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 7m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 7m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 1m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 7m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 7m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 7m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 1m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 7m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 7m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 7m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 2m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 7m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 7m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 7m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 2m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 7m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 7m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 7m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 2m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 7m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 7m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 7m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 2m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 8m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 8m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 8m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=my-eks-cluster, 2m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 8m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 8m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 8m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Destruction complete after 2m46s
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Destroying... [id=my-eks-cluster-cluster-20250711130645656100000002-20250711130647224100000006]
module.eks.aws_cloudwatch_log_group.this[0]: Destroying... [id=/aws/eks/my-eks-cluster/cluster]
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Destroying... [id=sgrule-1523386350]
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Destroying... [id=sgrule-2488107946]
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Destroying... [id=sgrule-3796001025]
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Destroying... [id=sgrule-669918767]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Destroying... [id=sgrule-3087015135]
module.eks.aws_cloudwatch_log_group.this[0]: Destruction complete after 0s
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Destroying... [id=sgrule-4080432836]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Destruction complete after 0s
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Destroying... [id=my-eks-cluster-cluster-20250711130645656100000002-20250711130647226400000007]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Destruction complete after 0s
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Destruction complete after 0s
module.eks.aws_security_group_rule.node["egress_all"]: Destroying... [id=sgrule-2195677435]
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Destroying... [id=sgrule-2209449408]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Destruction complete after 0s
module.vpc.aws_subnet.private[1]: Destroying... [id=subnet-0207b1e7a4735fe2a]
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Destruction complete after 1s
module.vpc.aws_subnet.private[1]: Destruction complete after 1s
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Destroying... [id=sgrule-1234254799]
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Destroying... [id=sgrule-758122500]
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Destruction complete after 1s
module.eks.module.kms.aws_kms_key.this[0]: Destroying... [id=5da33b1b-e456-4211-b0d3-24c1e8bc17a0]
module.eks.module.kms.aws_kms_key.this[0]: Destruction complete after 0s
module.vpc.aws_subnet.private[2]: Destroying... [id=subnet-066b431a490aa085e]
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Destruction complete after 2s
module.vpc.aws_subnet.private[0]: Destroying... [id=subnet-0dba9b337154d97b6]
module.vpc.aws_subnet.private[2]: Destruction complete after 0s
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Destroying... [id=sgrule-2475647096]
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Destruction complete after 2s
module.eks.aws_iam_role.this[0]: Destroying... [id=my-eks-cluster-cluster-20250711130645656100000002]
module.vpc.aws_subnet.private[0]: Destruction complete after 0s
module.eks.aws_security_group_rule.node["egress_all"]: Destruction complete after 3s
module.eks.aws_iam_role.this[0]: Destruction complete after 1s
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Destruction complete after 3s
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Destruction complete after 3s
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 8m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 8m20s elapsed]
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Destruction complete after 3s
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Destruction complete after 3s
module.eks.aws_security_group.cluster[0]: Destroying... [id=sg-02610bfd2bc4cbc28]
module.eks.aws_security_group.node[0]: Destroying... [id=sg-0b608979243210b4d]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 8m20s elapsed]
module.eks.aws_security_group.node[0]: Destruction complete after 1s
module.eks.aws_security_group.cluster[0]: Destruction complete after 1s
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 8m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 8m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 8m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 8m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 8m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 8m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 8m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 8m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 8m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 9m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 9m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 9m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 9m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 9m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 9m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 9m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 9m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 9m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 9m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 9m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 9m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 9m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 9m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 9m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 9m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 9m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 9m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 10m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 10m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 10m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 10m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 10m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 10m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 10m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 10m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 10m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 10m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 10m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 10m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 10m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 10m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 10m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 10m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 10m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 10m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 11m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 11m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 11m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 11m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 11m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 11m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 11m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 11m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 11m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 11m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 11m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 11m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 11m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 11m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 11m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 11m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 11m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 11m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 12m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 12m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 12m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 12m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 12m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 12m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 12m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 12m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 12m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 12m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 12m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 12m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 12m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 12m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 12m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 12m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 12m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 12m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 13m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 13m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 13m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 13m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 13m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 13m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 13m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 13m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 13m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 13m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 13m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 13m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 13m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 13m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 13m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 13m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 13m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 13m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 14m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 14m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 14m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 14m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 14m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 14m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 14m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 14m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 14m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 14m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 14m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 14m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 14m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 14m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 14m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 14m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 14m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 14m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 15m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 15m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 15m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 15m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 15m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 15m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 15m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 15m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 15m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 15m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 15m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 15m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 15m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 15m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 15m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 15m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 15m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 15m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 16m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 16m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 16m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 16m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 16m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 16m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 16m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 16m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 16m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 16m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 16m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 16m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 16m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 16m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 16m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 16m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 16m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 16m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 17m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 17m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 17m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 17m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 17m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 17m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 17m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 17m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 17m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 17m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 17m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 17m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 17m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 17m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 17m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 17m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 17m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 17m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 18m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 18m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 18m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 18m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 18m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 18m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 18m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 18m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 18m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 18m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 18m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 18m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 18m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 18m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 18m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 18m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 18m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 18m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 19m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 19m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 19m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 19m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 19m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 19m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 19m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 19m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 19m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 19m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 19m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 19m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 19m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 19m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 19m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 19m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 19m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0d7755a3024b86d18, 19m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0fa0d4ef8276b2f92, 20m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-051124211e090a831, 20m0s elapsed]
╷
│ Error: deleting EC2 Subnet (subnet-0fa0d4ef8276b2f92): operation error EC2: DeleteSubnet, https response error StatusCode: 400, RequestID: 734c3a46-403f-461b-a094-8fdcca22c1f6, api error DependencyViolation: The subnet 'subnet-0fa0d4ef8276b2f92' has dependencies and cannot be deleted.
│ 
│ 
╵
╷
│ Error: deleting EC2 Internet Gateway (igw-0d7755a3024b86d18): detaching EC2 Internet Gateway (igw-0d7755a3024b86d18) from VPC (vpc-0128e8b6ea6dcd28f): operation error EC2: DetachInternetGateway, https response error StatusCode: 400, RequestID: 1c8b3ce3-f9a5-4f0f-8835-000f15ab6400, api error DependencyViolation: Network vpc-0128e8b6ea6dcd28f has some mapped public address(es). Please unmap those public address(es) before detaching the gateway.
│ 
│ 
╵
╷
│ Error: deleting EC2 Subnet (subnet-051124211e090a831): operation error EC2: DeleteSubnet, https response error StatusCode: 400, RequestID: 335ad5cc-dbe1-41d6-9835-4962f6bb80fb, api error DependencyViolation: The subnet 'subnet-051124211e090a831' has dependencies and cannot be deleted.
│ 
│ 
╵
sgworker@MacBook-Pro-3.local /Users/sgworker/Desktop/Capstone-Project-2/eks-cluster 
% 